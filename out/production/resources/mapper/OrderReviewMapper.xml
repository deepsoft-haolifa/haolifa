<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.deepsoft.haolifa.dao.repository.OrderReviewMapper">
  <resultMap id="BaseResultMap" type="com.deepsoft.haolifa.model.domain.OrderReview">
    <constructor>
      <idArg column="id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="create_time" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="update_time" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="order_no" javaType="java.lang.String" jdbcType="CHAR" />
      <arg column="delivery_time" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="review_form" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="tech_user" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="tech_remark" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="tech_time" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="store_user" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="store_remark" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="store_review_time" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="purchase_user" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="purchase_remark" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="purchase_time" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="quality_user" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="quality_remark" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="quality_time" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="produce_user" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="produce_remark" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="produce_time" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="manager" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="manager_remark" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="manager_time" javaType="java.util.Date" jdbcType="TIMESTAMP" />
    </constructor>
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, create_time, update_time, order_no, delivery_time, review_form, tech_user, tech_remark, 
    tech_time, store_user, store_remark, store_review_time, purchase_user, purchase_remark, 
    purchase_time, quality_user, quality_remark, quality_time, produce_user, produce_remark, 
    produce_time, manager, manager_remark, manager_time
  </sql>
  <select id="selectByExample" parameterType="com.deepsoft.haolifa.model.domain.OrderReviewExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from order_review
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from order_review
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from order_review
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.deepsoft.haolifa.model.domain.OrderReviewExample">
    delete from order_review
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.deepsoft.haolifa.model.domain.OrderReview">
    insert into order_review (id, create_time, update_time, 
      order_no, delivery_time, review_form, 
      tech_user, tech_remark, tech_time, 
      store_user, store_remark, store_review_time, 
      purchase_user, purchase_remark, purchase_time, 
      quality_user, quality_remark, quality_time, 
      produce_user, produce_remark, produce_time, 
      manager, manager_remark, manager_time
      )
    values (#{id,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{orderNo,jdbcType=CHAR}, #{deliveryTime,jdbcType=TIMESTAMP}, #{reviewForm,jdbcType=VARCHAR}, 
      #{techUser,jdbcType=INTEGER}, #{techRemark,jdbcType=VARCHAR}, #{techTime,jdbcType=TIMESTAMP}, 
      #{storeUser,jdbcType=INTEGER}, #{storeRemark,jdbcType=VARCHAR}, #{storeReviewTime,jdbcType=TIMESTAMP}, 
      #{purchaseUser,jdbcType=INTEGER}, #{purchaseRemark,jdbcType=VARCHAR}, #{purchaseTime,jdbcType=TIMESTAMP}, 
      #{qualityUser,jdbcType=INTEGER}, #{qualityRemark,jdbcType=VARCHAR}, #{qualityTime,jdbcType=TIMESTAMP}, 
      #{produceUser,jdbcType=INTEGER}, #{produceRemark,jdbcType=VARCHAR}, #{produceTime,jdbcType=TIMESTAMP}, 
      #{manager,jdbcType=INTEGER}, #{managerRemark,jdbcType=VARCHAR}, #{managerTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.deepsoft.haolifa.model.domain.OrderReview">
    insert into order_review
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="orderNo != null">
        order_no,
      </if>
      <if test="deliveryTime != null">
        delivery_time,
      </if>
      <if test="reviewForm != null">
        review_form,
      </if>
      <if test="techUser != null">
        tech_user,
      </if>
      <if test="techRemark != null">
        tech_remark,
      </if>
      <if test="techTime != null">
        tech_time,
      </if>
      <if test="storeUser != null">
        store_user,
      </if>
      <if test="storeRemark != null">
        store_remark,
      </if>
      <if test="storeReviewTime != null">
        store_review_time,
      </if>
      <if test="purchaseUser != null">
        purchase_user,
      </if>
      <if test="purchaseRemark != null">
        purchase_remark,
      </if>
      <if test="purchaseTime != null">
        purchase_time,
      </if>
      <if test="qualityUser != null">
        quality_user,
      </if>
      <if test="qualityRemark != null">
        quality_remark,
      </if>
      <if test="qualityTime != null">
        quality_time,
      </if>
      <if test="produceUser != null">
        produce_user,
      </if>
      <if test="produceRemark != null">
        produce_remark,
      </if>
      <if test="produceTime != null">
        produce_time,
      </if>
      <if test="manager != null">
        manager,
      </if>
      <if test="managerRemark != null">
        manager_remark,
      </if>
      <if test="managerTime != null">
        manager_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="orderNo != null">
        #{orderNo,jdbcType=CHAR},
      </if>
      <if test="deliveryTime != null">
        #{deliveryTime,jdbcType=TIMESTAMP},
      </if>
      <if test="reviewForm != null">
        #{reviewForm,jdbcType=VARCHAR},
      </if>
      <if test="techUser != null">
        #{techUser,jdbcType=INTEGER},
      </if>
      <if test="techRemark != null">
        #{techRemark,jdbcType=VARCHAR},
      </if>
      <if test="techTime != null">
        #{techTime,jdbcType=TIMESTAMP},
      </if>
      <if test="storeUser != null">
        #{storeUser,jdbcType=INTEGER},
      </if>
      <if test="storeRemark != null">
        #{storeRemark,jdbcType=VARCHAR},
      </if>
      <if test="storeReviewTime != null">
        #{storeReviewTime,jdbcType=TIMESTAMP},
      </if>
      <if test="purchaseUser != null">
        #{purchaseUser,jdbcType=INTEGER},
      </if>
      <if test="purchaseRemark != null">
        #{purchaseRemark,jdbcType=VARCHAR},
      </if>
      <if test="purchaseTime != null">
        #{purchaseTime,jdbcType=TIMESTAMP},
      </if>
      <if test="qualityUser != null">
        #{qualityUser,jdbcType=INTEGER},
      </if>
      <if test="qualityRemark != null">
        #{qualityRemark,jdbcType=VARCHAR},
      </if>
      <if test="qualityTime != null">
        #{qualityTime,jdbcType=TIMESTAMP},
      </if>
      <if test="produceUser != null">
        #{produceUser,jdbcType=INTEGER},
      </if>
      <if test="produceRemark != null">
        #{produceRemark,jdbcType=VARCHAR},
      </if>
      <if test="produceTime != null">
        #{produceTime,jdbcType=TIMESTAMP},
      </if>
      <if test="manager != null">
        #{manager,jdbcType=INTEGER},
      </if>
      <if test="managerRemark != null">
        #{managerRemark,jdbcType=VARCHAR},
      </if>
      <if test="managerTime != null">
        #{managerTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.deepsoft.haolifa.model.domain.OrderReviewExample" resultType="java.lang.Long">
    select count(*) from order_review
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update order_review
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.orderNo != null">
        order_no = #{record.orderNo,jdbcType=CHAR},
      </if>
      <if test="record.deliveryTime != null">
        delivery_time = #{record.deliveryTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.reviewForm != null">
        review_form = #{record.reviewForm,jdbcType=VARCHAR},
      </if>
      <if test="record.techUser != null">
        tech_user = #{record.techUser,jdbcType=INTEGER},
      </if>
      <if test="record.techRemark != null">
        tech_remark = #{record.techRemark,jdbcType=VARCHAR},
      </if>
      <if test="record.techTime != null">
        tech_time = #{record.techTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.storeUser != null">
        store_user = #{record.storeUser,jdbcType=INTEGER},
      </if>
      <if test="record.storeRemark != null">
        store_remark = #{record.storeRemark,jdbcType=VARCHAR},
      </if>
      <if test="record.storeReviewTime != null">
        store_review_time = #{record.storeReviewTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.purchaseUser != null">
        purchase_user = #{record.purchaseUser,jdbcType=INTEGER},
      </if>
      <if test="record.purchaseRemark != null">
        purchase_remark = #{record.purchaseRemark,jdbcType=VARCHAR},
      </if>
      <if test="record.purchaseTime != null">
        purchase_time = #{record.purchaseTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.qualityUser != null">
        quality_user = #{record.qualityUser,jdbcType=INTEGER},
      </if>
      <if test="record.qualityRemark != null">
        quality_remark = #{record.qualityRemark,jdbcType=VARCHAR},
      </if>
      <if test="record.qualityTime != null">
        quality_time = #{record.qualityTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.produceUser != null">
        produce_user = #{record.produceUser,jdbcType=INTEGER},
      </if>
      <if test="record.produceRemark != null">
        produce_remark = #{record.produceRemark,jdbcType=VARCHAR},
      </if>
      <if test="record.produceTime != null">
        produce_time = #{record.produceTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.manager != null">
        manager = #{record.manager,jdbcType=INTEGER},
      </if>
      <if test="record.managerRemark != null">
        manager_remark = #{record.managerRemark,jdbcType=VARCHAR},
      </if>
      <if test="record.managerTime != null">
        manager_time = #{record.managerTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update order_review
    set id = #{record.id,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      order_no = #{record.orderNo,jdbcType=CHAR},
      delivery_time = #{record.deliveryTime,jdbcType=TIMESTAMP},
      review_form = #{record.reviewForm,jdbcType=VARCHAR},
      tech_user = #{record.techUser,jdbcType=INTEGER},
      tech_remark = #{record.techRemark,jdbcType=VARCHAR},
      tech_time = #{record.techTime,jdbcType=TIMESTAMP},
      store_user = #{record.storeUser,jdbcType=INTEGER},
      store_remark = #{record.storeRemark,jdbcType=VARCHAR},
      store_review_time = #{record.storeReviewTime,jdbcType=TIMESTAMP},
      purchase_user = #{record.purchaseUser,jdbcType=INTEGER},
      purchase_remark = #{record.purchaseRemark,jdbcType=VARCHAR},
      purchase_time = #{record.purchaseTime,jdbcType=TIMESTAMP},
      quality_user = #{record.qualityUser,jdbcType=INTEGER},
      quality_remark = #{record.qualityRemark,jdbcType=VARCHAR},
      quality_time = #{record.qualityTime,jdbcType=TIMESTAMP},
      produce_user = #{record.produceUser,jdbcType=INTEGER},
      produce_remark = #{record.produceRemark,jdbcType=VARCHAR},
      produce_time = #{record.produceTime,jdbcType=TIMESTAMP},
      manager = #{record.manager,jdbcType=INTEGER},
      manager_remark = #{record.managerRemark,jdbcType=VARCHAR},
      manager_time = #{record.managerTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.deepsoft.haolifa.model.domain.OrderReview">
    update order_review
    <set>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="orderNo != null">
        order_no = #{orderNo,jdbcType=CHAR},
      </if>
      <if test="deliveryTime != null">
        delivery_time = #{deliveryTime,jdbcType=TIMESTAMP},
      </if>
      <if test="reviewForm != null">
        review_form = #{reviewForm,jdbcType=VARCHAR},
      </if>
      <if test="techUser != null">
        tech_user = #{techUser,jdbcType=INTEGER},
      </if>
      <if test="techRemark != null">
        tech_remark = #{techRemark,jdbcType=VARCHAR},
      </if>
      <if test="techTime != null">
        tech_time = #{techTime,jdbcType=TIMESTAMP},
      </if>
      <if test="storeUser != null">
        store_user = #{storeUser,jdbcType=INTEGER},
      </if>
      <if test="storeRemark != null">
        store_remark = #{storeRemark,jdbcType=VARCHAR},
      </if>
      <if test="storeReviewTime != null">
        store_review_time = #{storeReviewTime,jdbcType=TIMESTAMP},
      </if>
      <if test="purchaseUser != null">
        purchase_user = #{purchaseUser,jdbcType=INTEGER},
      </if>
      <if test="purchaseRemark != null">
        purchase_remark = #{purchaseRemark,jdbcType=VARCHAR},
      </if>
      <if test="purchaseTime != null">
        purchase_time = #{purchaseTime,jdbcType=TIMESTAMP},
      </if>
      <if test="qualityUser != null">
        quality_user = #{qualityUser,jdbcType=INTEGER},
      </if>
      <if test="qualityRemark != null">
        quality_remark = #{qualityRemark,jdbcType=VARCHAR},
      </if>
      <if test="qualityTime != null">
        quality_time = #{qualityTime,jdbcType=TIMESTAMP},
      </if>
      <if test="produceUser != null">
        produce_user = #{produceUser,jdbcType=INTEGER},
      </if>
      <if test="produceRemark != null">
        produce_remark = #{produceRemark,jdbcType=VARCHAR},
      </if>
      <if test="produceTime != null">
        produce_time = #{produceTime,jdbcType=TIMESTAMP},
      </if>
      <if test="manager != null">
        manager = #{manager,jdbcType=INTEGER},
      </if>
      <if test="managerRemark != null">
        manager_remark = #{managerRemark,jdbcType=VARCHAR},
      </if>
      <if test="managerTime != null">
        manager_time = #{managerTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.deepsoft.haolifa.model.domain.OrderReview">
    update order_review
    set create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      order_no = #{orderNo,jdbcType=CHAR},
      delivery_time = #{deliveryTime,jdbcType=TIMESTAMP},
      review_form = #{reviewForm,jdbcType=VARCHAR},
      tech_user = #{techUser,jdbcType=INTEGER},
      tech_remark = #{techRemark,jdbcType=VARCHAR},
      tech_time = #{techTime,jdbcType=TIMESTAMP},
      store_user = #{storeUser,jdbcType=INTEGER},
      store_remark = #{storeRemark,jdbcType=VARCHAR},
      store_review_time = #{storeReviewTime,jdbcType=TIMESTAMP},
      purchase_user = #{purchaseUser,jdbcType=INTEGER},
      purchase_remark = #{purchaseRemark,jdbcType=VARCHAR},
      purchase_time = #{purchaseTime,jdbcType=TIMESTAMP},
      quality_user = #{qualityUser,jdbcType=INTEGER},
      quality_remark = #{qualityRemark,jdbcType=VARCHAR},
      quality_time = #{qualityTime,jdbcType=TIMESTAMP},
      produce_user = #{produceUser,jdbcType=INTEGER},
      produce_remark = #{produceRemark,jdbcType=VARCHAR},
      produce_time = #{produceTime,jdbcType=TIMESTAMP},
      manager = #{manager,jdbcType=INTEGER},
      manager_remark = #{managerRemark,jdbcType=VARCHAR},
      manager_time = #{managerTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>