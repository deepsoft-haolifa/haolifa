buildscript {
    ext {
        springBootVersion = '2.0.3.RELEASE'
    }
    repositories {
        mavenLocal()
        maven { url "http://maven.aliyun.com/nexus/content/groups/public/" }
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'com.bmuschko.tomcat-base'
apply plugin: 'com.bmuschko.tomcat'
apply plugin: 'org.hidetake.ssh'
apply plugin: "war"

group = 'com.deepsoft'
//version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8


repositories {
    mavenLocal()
    maven { url "http://maven.aliyun.com/nexus/content/groups/public/" }
    mavenCentral()
}


dependencies {
    compile('org.springframework.boot:spring-boot-starter-data-redis')
    compile('org.springframework.boot:spring-boot-starter-amqp')
    compile('org.springframework.boot:spring-boot-starter-aop')
    compile('org.springframework.boot:spring-boot-starter-security')
    compile('org.springframework.session:spring-session-data-redis')
    compile('org.springframework.boot:spring-boot-starter-web')
    compile('org.springframework.boot:spring-boot-starter-tomcat')
    compile('org.mybatis.spring.boot:mybatis-spring-boot-starter:1.3.2')
    runtime('mysql:mysql-connector-java')
    runtime('org.springframework.boot:spring-boot-devtools')
    compileOnly('org.projectlombok:lombok')
    testCompile('org.springframework.boot:spring-boot-starter-test')
    testCompile('org.springframework.security:spring-security-test')
    compile('com.github.pagehelper:pagehelper-spring-boot-starter:1.2.5')

    ///// swagger2 //////
    compile('io.springfox:springfox-swagger2:2.7.0')
    compile('io.springfox:springfox-swagger-ui:2.7.0')

    compile('org.apache.httpcomponents:httpclient:4.3.5')
    compile('org.apache.commons:commons-collections4:4.1')

    ///// fastjson //////
    compile('com.alibaba:fastjson:1.2.34')

    compile('org.apache.commons:commons-lang3:3.7')
    // poi
    compile group: 'org.apache.poi', name: 'poi', version: '3.16'
    compile group: 'org.apache.poi', name: 'poi-ooxml', version: '3.16'
    compile group: 'org.apache.poi', name: 'poi-ooxml-schemas', version: '3.16'
}

//mybatis generator plugin ------ start
buildscript {
    repositories {
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath "gradle.plugin.com.arenagod.gradle:mybatis-generator-plugin:1.4"
    }
}

apply plugin: "com.arenagod.gradle.MybatisGenerator"

configurations {
    mybatisGenerator
}

mybatisGenerator {
    verbose = true
    configFile = 'src/main/resources/tools/generatorConfig.xml'
}

//mybatis generator plugin ------ end

//tomcat deploy plugin ------ start

buildscript {
    repositories {
        jcenter()
        mavenCentral()
    }
    dependencies {
        classpath 'com.bmuschko:gradle-tomcat-plugin:2.3'
        classpath 'org.hidetake:gradle-ssh-plugin:2.9.0'
    }
}

ssh.settings {
    knownHosts = allowAnyHosts
}
remotes {
    deployServer {
        host = '47.105.36.56'
        user = 'root'
        password = 'Haolifa123456'
    }
}

task tomcatDeploy {
    group "web application"
    doLast {
        ssh.run {
            session(remotes.deployServer) {
                println 'stop tomcat...'
                executeScript '''#!/bin/sh
								cd /data/web/tomcat8080/bin
								./shutdown.sh
							'''
                println 'delete tomcat war'
                executeScript '''#!/bin/sh
								cd /data/web/tomcat8080/webapps
								rm -rf *
							'''
                println 'copy tomcat war...'
                put from: buildDir.toString() + '/libs/haolifa.war', into: '/data/web/tomcat8080/webapps'
                println 'start tomcat...'
                executeScript '''#!/bin/sh
								cd /data/web/tomcat8080/bin
								./startup.sh
							'''
            }
        }
    }
}

tomcat {
    httpPort = 8080
    httpsPort = 8443
    ajpPort = 8009
    enableSSL = false
    contextPath = '/haolifa'
}
//tomcat deploy plugin ------ end
