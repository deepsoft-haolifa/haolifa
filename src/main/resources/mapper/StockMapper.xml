<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.deepsoft.haolifa.dao.repository.StockMapper">
  <resultMap id="BaseResultMap" type="com.deepsoft.haolifa.model.domain.Stock">
    <constructor>
      <idArg column="id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="create_time" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="update_time" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="create_user" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="update_user" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="room_no" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="rack_no" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="product_no" javaType="java.lang.String" jdbcType="CHAR" />
      <arg column="product_model" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="product_specifications" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="material_batch_no" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="material_graph_no" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="type" javaType="java.lang.Byte" jdbcType="TINYINT" />
      <arg column="quantity" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="is_delete" javaType="java.lang.Byte" jdbcType="TINYINT" />
      <arg column="remark" javaType="java.lang.String" jdbcType="VARCHAR" />
    </constructor>
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, create_time, update_time, create_user, update_user, room_no, rack_no, product_no, 
    product_model, product_specifications, material_batch_no, material_graph_no, type, 
    quantity, is_delete, remark
  </sql>
  <select id="selectByExample" parameterType="com.deepsoft.haolifa.model.domain.StockExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from stock
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from stock
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from stock
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.deepsoft.haolifa.model.domain.StockExample">
    delete from stock
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.deepsoft.haolifa.model.domain.Stock">
    insert into stock (id, create_time, update_time, 
      create_user, update_user, room_no, 
      rack_no, product_no, product_model, 
      product_specifications, material_batch_no, 
      material_graph_no, type, quantity, 
      is_delete, remark)
    values (#{id,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{createUser,jdbcType=INTEGER}, #{updateUser,jdbcType=INTEGER}, #{roomNo,jdbcType=VARCHAR}, 
      #{rackNo,jdbcType=VARCHAR}, #{productNo,jdbcType=CHAR}, #{productModel,jdbcType=VARCHAR}, 
      #{productSpecifications,jdbcType=VARCHAR}, #{materialBatchNo,jdbcType=VARCHAR}, 
      #{materialGraphNo,jdbcType=VARCHAR}, #{type,jdbcType=TINYINT}, #{quantity,jdbcType=INTEGER}, 
      #{isDelete,jdbcType=TINYINT}, #{remark,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.deepsoft.haolifa.model.domain.Stock">
    insert into stock
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="createUser != null">
        create_user,
      </if>
      <if test="updateUser != null">
        update_user,
      </if>
      <if test="roomNo != null">
        room_no,
      </if>
      <if test="rackNo != null">
        rack_no,
      </if>
      <if test="productNo != null">
        product_no,
      </if>
      <if test="productModel != null">
        product_model,
      </if>
      <if test="productSpecifications != null">
        product_specifications,
      </if>
      <if test="materialBatchNo != null">
        material_batch_no,
      </if>
      <if test="materialGraphNo != null">
        material_graph_no,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="quantity != null">
        quantity,
      </if>
      <if test="isDelete != null">
        is_delete,
      </if>
      <if test="remark != null">
        remark,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUser != null">
        #{createUser,jdbcType=INTEGER},
      </if>
      <if test="updateUser != null">
        #{updateUser,jdbcType=INTEGER},
      </if>
      <if test="roomNo != null">
        #{roomNo,jdbcType=VARCHAR},
      </if>
      <if test="rackNo != null">
        #{rackNo,jdbcType=VARCHAR},
      </if>
      <if test="productNo != null">
        #{productNo,jdbcType=CHAR},
      </if>
      <if test="productModel != null">
        #{productModel,jdbcType=VARCHAR},
      </if>
      <if test="productSpecifications != null">
        #{productSpecifications,jdbcType=VARCHAR},
      </if>
      <if test="materialBatchNo != null">
        #{materialBatchNo,jdbcType=VARCHAR},
      </if>
      <if test="materialGraphNo != null">
        #{materialGraphNo,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        #{type,jdbcType=TINYINT},
      </if>
      <if test="quantity != null">
        #{quantity,jdbcType=INTEGER},
      </if>
      <if test="isDelete != null">
        #{isDelete,jdbcType=TINYINT},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.deepsoft.haolifa.model.domain.StockExample" resultType="java.lang.Long">
    select count(*) from stock
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update stock
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createUser != null">
        create_user = #{record.createUser,jdbcType=INTEGER},
      </if>
      <if test="record.updateUser != null">
        update_user = #{record.updateUser,jdbcType=INTEGER},
      </if>
      <if test="record.roomNo != null">
        room_no = #{record.roomNo,jdbcType=VARCHAR},
      </if>
      <if test="record.rackNo != null">
        rack_no = #{record.rackNo,jdbcType=VARCHAR},
      </if>
      <if test="record.productNo != null">
        product_no = #{record.productNo,jdbcType=CHAR},
      </if>
      <if test="record.productModel != null">
        product_model = #{record.productModel,jdbcType=VARCHAR},
      </if>
      <if test="record.productSpecifications != null">
        product_specifications = #{record.productSpecifications,jdbcType=VARCHAR},
      </if>
      <if test="record.materialBatchNo != null">
        material_batch_no = #{record.materialBatchNo,jdbcType=VARCHAR},
      </if>
      <if test="record.materialGraphNo != null">
        material_graph_no = #{record.materialGraphNo,jdbcType=VARCHAR},
      </if>
      <if test="record.type != null">
        type = #{record.type,jdbcType=TINYINT},
      </if>
      <if test="record.quantity != null">
        quantity = #{record.quantity,jdbcType=INTEGER},
      </if>
      <if test="record.isDelete != null">
        is_delete = #{record.isDelete,jdbcType=TINYINT},
      </if>
      <if test="record.remark != null">
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update stock
    set id = #{record.id,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      create_user = #{record.createUser,jdbcType=INTEGER},
      update_user = #{record.updateUser,jdbcType=INTEGER},
      room_no = #{record.roomNo,jdbcType=VARCHAR},
      rack_no = #{record.rackNo,jdbcType=VARCHAR},
      product_no = #{record.productNo,jdbcType=CHAR},
      product_model = #{record.productModel,jdbcType=VARCHAR},
      product_specifications = #{record.productSpecifications,jdbcType=VARCHAR},
      material_batch_no = #{record.materialBatchNo,jdbcType=VARCHAR},
      material_graph_no = #{record.materialGraphNo,jdbcType=VARCHAR},
      type = #{record.type,jdbcType=TINYINT},
      quantity = #{record.quantity,jdbcType=INTEGER},
      is_delete = #{record.isDelete,jdbcType=TINYINT},
      remark = #{record.remark,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.deepsoft.haolifa.model.domain.Stock">
    update stock
    <set>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUser != null">
        create_user = #{createUser,jdbcType=INTEGER},
      </if>
      <if test="updateUser != null">
        update_user = #{updateUser,jdbcType=INTEGER},
      </if>
      <if test="roomNo != null">
        room_no = #{roomNo,jdbcType=VARCHAR},
      </if>
      <if test="rackNo != null">
        rack_no = #{rackNo,jdbcType=VARCHAR},
      </if>
      <if test="productNo != null">
        product_no = #{productNo,jdbcType=CHAR},
      </if>
      <if test="productModel != null">
        product_model = #{productModel,jdbcType=VARCHAR},
      </if>
      <if test="productSpecifications != null">
        product_specifications = #{productSpecifications,jdbcType=VARCHAR},
      </if>
      <if test="materialBatchNo != null">
        material_batch_no = #{materialBatchNo,jdbcType=VARCHAR},
      </if>
      <if test="materialGraphNo != null">
        material_graph_no = #{materialGraphNo,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=TINYINT},
      </if>
      <if test="quantity != null">
        quantity = #{quantity,jdbcType=INTEGER},
      </if>
      <if test="isDelete != null">
        is_delete = #{isDelete,jdbcType=TINYINT},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.deepsoft.haolifa.model.domain.Stock">
    update stock
    set create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      create_user = #{createUser,jdbcType=INTEGER},
      update_user = #{updateUser,jdbcType=INTEGER},
      room_no = #{roomNo,jdbcType=VARCHAR},
      rack_no = #{rackNo,jdbcType=VARCHAR},
      product_no = #{productNo,jdbcType=CHAR},
      product_model = #{productModel,jdbcType=VARCHAR},
      product_specifications = #{productSpecifications,jdbcType=VARCHAR},
      material_batch_no = #{materialBatchNo,jdbcType=VARCHAR},
      material_graph_no = #{materialGraphNo,jdbcType=VARCHAR},
      type = #{type,jdbcType=TINYINT},
      quantity = #{quantity,jdbcType=INTEGER},
      is_delete = #{isDelete,jdbcType=TINYINT},
      remark = #{remark,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>