<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.deepsoft.haolifa.dao.repository.SupplierEvaluationRecordMapper">
  <resultMap id="BaseResultMap" type="com.deepsoft.haolifa.model.domain.SupplierEvaluationRecord">
    <constructor>
      <idArg column="id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="supplier_no" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="supplier_file" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="accessory" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="audit_result" javaType="java.lang.Byte" jdbcType="TINYINT" />
      <arg column="create_data" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="update_date" javaType="java.util.Date" jdbcType="TIMESTAMP" />
    </constructor>
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, supplier_no, supplier_file, accessory, audit_result, create_data, update_date
  </sql>
  <select id="selectByExample" parameterType="com.deepsoft.haolifa.model.domain.SupplierEvaluationRecordExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from supplier_evaluation_record
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from supplier_evaluation_record
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from supplier_evaluation_record
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.deepsoft.haolifa.model.domain.SupplierEvaluationRecordExample">
    delete from supplier_evaluation_record
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.deepsoft.haolifa.model.domain.SupplierEvaluationRecord">
    insert into supplier_evaluation_record (id, supplier_no, supplier_file, 
      accessory, audit_result, create_data, 
      update_date)
    values (#{id,jdbcType=INTEGER}, #{supplierNo,jdbcType=VARCHAR}, #{supplierFile,jdbcType=VARCHAR}, 
      #{accessory,jdbcType=VARCHAR}, #{auditResult,jdbcType=TINYINT}, #{createData,jdbcType=TIMESTAMP}, 
      #{updateDate,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.deepsoft.haolifa.model.domain.SupplierEvaluationRecord">
    insert into supplier_evaluation_record
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="supplierNo != null">
        supplier_no,
      </if>
      <if test="supplierFile != null">
        supplier_file,
      </if>
      <if test="accessory != null">
        accessory,
      </if>
      <if test="auditResult != null">
        audit_result,
      </if>
      <if test="createData != null">
        create_data,
      </if>
      <if test="updateDate != null">
        update_date,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="supplierNo != null">
        #{supplierNo,jdbcType=VARCHAR},
      </if>
      <if test="supplierFile != null">
        #{supplierFile,jdbcType=VARCHAR},
      </if>
      <if test="accessory != null">
        #{accessory,jdbcType=VARCHAR},
      </if>
      <if test="auditResult != null">
        #{auditResult,jdbcType=TINYINT},
      </if>
      <if test="createData != null">
        #{createData,jdbcType=TIMESTAMP},
      </if>
      <if test="updateDate != null">
        #{updateDate,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.deepsoft.haolifa.model.domain.SupplierEvaluationRecordExample" resultType="java.lang.Long">
    select count(*) from supplier_evaluation_record
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update supplier_evaluation_record
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.supplierNo != null">
        supplier_no = #{record.supplierNo,jdbcType=VARCHAR},
      </if>
      <if test="record.supplierFile != null">
        supplier_file = #{record.supplierFile,jdbcType=VARCHAR},
      </if>
      <if test="record.accessory != null">
        accessory = #{record.accessory,jdbcType=VARCHAR},
      </if>
      <if test="record.auditResult != null">
        audit_result = #{record.auditResult,jdbcType=TINYINT},
      </if>
      <if test="record.createData != null">
        create_data = #{record.createData,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateDate != null">
        update_date = #{record.updateDate,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update supplier_evaluation_record
    set id = #{record.id,jdbcType=INTEGER},
      supplier_no = #{record.supplierNo,jdbcType=VARCHAR},
      supplier_file = #{record.supplierFile,jdbcType=VARCHAR},
      accessory = #{record.accessory,jdbcType=VARCHAR},
      audit_result = #{record.auditResult,jdbcType=TINYINT},
      create_data = #{record.createData,jdbcType=TIMESTAMP},
      update_date = #{record.updateDate,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.deepsoft.haolifa.model.domain.SupplierEvaluationRecord">
    update supplier_evaluation_record
    <set>
      <if test="supplierNo != null">
        supplier_no = #{supplierNo,jdbcType=VARCHAR},
      </if>
      <if test="supplierFile != null">
        supplier_file = #{supplierFile,jdbcType=VARCHAR},
      </if>
      <if test="accessory != null">
        accessory = #{accessory,jdbcType=VARCHAR},
      </if>
      <if test="auditResult != null">
        audit_result = #{auditResult,jdbcType=TINYINT},
      </if>
      <if test="createData != null">
        create_data = #{createData,jdbcType=TIMESTAMP},
      </if>
      <if test="updateDate != null">
        update_date = #{updateDate,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.deepsoft.haolifa.model.domain.SupplierEvaluationRecord">
    update supplier_evaluation_record
    set supplier_no = #{supplierNo,jdbcType=VARCHAR},
      supplier_file = #{supplierFile,jdbcType=VARCHAR},
      accessory = #{accessory,jdbcType=VARCHAR},
      audit_result = #{auditResult,jdbcType=TINYINT},
      create_data = #{createData,jdbcType=TIMESTAMP},
      update_date = #{updateDate,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>