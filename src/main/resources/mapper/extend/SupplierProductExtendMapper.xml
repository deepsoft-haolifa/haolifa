<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.deepsoft.haolifa.dao.repository.extend.SupplierProductExtendMapper">

  <select id="getSupplierProList" parameterType="com.deepsoft.haolifa.model.dto.SupplierProductListDTO"
    resultType="com.deepsoft.haolifa.model.dto.SupplierProductResDTO">
    select sp.id id, s.suppiler_name supplierName,sp.material_type materialType, s.suppiler_no supplierNo,
     sp.material_graph_no materialGraphNo,
    sp.material_name materialName,
    m.material_classify_name materialClassifyName
    from supplier_product sp
    left join supplier s on s.suppiler_no = sp.supplier_no
    left join material m on sp.material_graph_no=m.graph_no
    where
    s.is_delete = 0 and sp.is_delete = 0
    <if test="materialType != null and materialType !=''">
      and sp.material_type = #{materialType}
    </if>
    <if test="supplierNo != null and supplierNo !=''">
      and s.suppiler_no like CONCAT('%',#{supplierNo},'%')
    </if>
    <if test="supplierName != null and supplierName !=''">
      and s.suppiler_name like CONCAT('%',#{supplierName},'%')
    </if>
    <if test="materialGraphNo != null and materialGraphNo !=''">
      and sp.material_graph_no like CONCAT('%',#{materialGraphNo},'%')
    </if>
    <if test="materialName != null and materialName !=''">
      and sp.material_name like CONCAT('%',#{materialName},'%')
    </if>
  </select>

    <select id="getSupplierList" parameterType="com.deepsoft.haolifa.model.dto.SupplierReqDTO"
            resultType="com.deepsoft.haolifa.model.dto.SupplierRespDTO">
    SELECT
        s.id id, s.suppiler_name supplierName, s.suppiler_no suppilerNo
        s.phone,s.address,
        s.legal_person legalPerson,s.legal_person_phone legalPersonPhone,
        s.responsible_person responsiblePerson
    FROM
    supplier s
    WHERE
    s.is_delete = 0
    AND s.suppiler_no IN (
    SELECT
    supplier_no
    FROM
    ( SELECT supplier_no, count( 1 ) cou FROM `supplier_product` WHERE material_graph_no IN
        <foreach collection="graphNos" item="id" index="index" open="(" close=")" separator=",">
            #{id}
        </foreach>
    GROUP BY supplier_no ) a
    WHERE
    a.cou >= #{materialCount}
    );
</select>

</mapper>
