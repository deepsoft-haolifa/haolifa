<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.deepsoft.haolifa.dao.repository.SaleReportMapper">
    <resultMap id="reportMap" type="com.deepsoft.haolifa.model.domain.SaleReport">
        <result column="total_num" property="totalNum" jdbcType="INTEGER" javaType="java.lang.Integer"></result>
        <result column="product_no" property="productNo" jdbcType="VARCHAR" javaType="java.lang.String"></result>
        <result column="product_model" property="productModel" jdbcType="VARCHAR" javaType="java.lang.String"></result>
        <result column="total_price" property="totalPrice" jdbcType="DOUBLE" javaType="java.lang.Double"></result>
    </resultMap>
    <resultMap id="contractMap" type="com.deepsoft.haolifa.model.dto.export.ExportContractDTO">
        <result column="year" property="year" jdbcType="INTEGER" javaType="java.lang.Integer"></result>
        <result column="demand_name" property="demandName" jdbcType="VARCHAR" javaType="java.lang.String"></result>
        <result column="total_price" property="totalPrice" jdbcType="DOUBLE" javaType="java.lang.Double"></result>
    </resultMap>
    <select id="selectAll" resultMap="reportMap" parameterType="java.lang.String">
        select sum(inspect.total_num)
        total_num,inspect.product_no,inspect.product_model,sum(inspect.total_num*associate.price) total_price from
        (select
        sum(pro_inspect_record.`qualified_number`)
        total_num,pro_inspect_record.product_no,pro_inspect_record.product_model,pro_inspect_record.order_no
        from pro_inspect_record where product_no !=''
        <if test="year!=null and year != ''">
            and FROM_UNIXTIME(UNIX_TIMESTAMP(create_time),"%Y") = #{year}
        </if>
        group by pro_inspect_record.product_no,pro_inspect_record.order_no) as inspect,
        (select order_product_associate.`product_no`,order_product_associate.`price`,order_product_associate.`order_no`
        from order_product_associate
        where 1=1
        <if test="year!=null and year != ''">
            and FROM_UNIXTIME(UNIX_TIMESTAMP(create_time),"%Y") = #{year}
        </if>
        group by order_product_associate.`product_no`,order_product_associate.`order_no`
        order by order_no) as associate
        where inspect.product_no = associate.product_no and inspect.order_no = associate.order_no
    </select>
    <select id="selectByMonth" resultType="java.lang.String">
      select ifnull(sum((e.quantity*op.price)),0) from entry_out_store_record e
      left join order_product_associate op on e.order_no=op.order_no and e.product_no=op.product_no
      where e.type=1 and e.operation_type=2  and e.create_time BETWEEN #{startTime} and #{endTime}
    </select>
    <select id="selectByModel" resultMap="reportMap" parameterType="java.lang.String">
        select sum(inspect.total_num)
        total_num,inspect.product_no,inspect.product_model,sum(inspect.total_num*associate.price) total_price from
        (select
        sum(pro_inspect_record.`qualified_number`)
        total_num,pro_inspect_record.product_no,pro_inspect_record.product_model,pro_inspect_record.order_no
        from pro_inspect_record where product_no !=''
        <if test="year!=null and year != ''">
            and FROM_UNIXTIME(UNIX_TIMESTAMP(create_time),"%Y") = #{year}
        </if>
        group by pro_inspect_record.product_no,pro_inspect_record.order_no) as inspect,
        (select order_product_associate.`product_no`,order_product_associate.`price`,order_product_associate.`order_no`
        from order_product_associate
        group by order_product_associate.`product_no`,order_product_associate.`order_no`
        order by order_no) as associate
        where inspect.product_no = associate.product_no and inspect.order_no = associate.order_no group by
        inspect.product_model
    </select>

    <select id="selectAllContract" resultMap="reportMap">
        select sum(order_product_associate.product_number)
        total_num,order_product_associate.product_no,order_product_associate.product_model,sum(order_product_associate.product_number*order_product_associate.price)
        total_price
        from order_product_associate where 1=1
        <if test="year!=null and year != ''">
            and FROM_UNIXTIME(UNIX_TIMESTAMP(create_time),"%Y") = #{year}
        </if>
    </select>

    <select id="selectByMonthContract" resultMap="reportMap" parameterType="java.lang.String">
    select sum(order_product_associate.product_number) total_num,order_product_associate.product_no,order_product_associate.product_model,sum(order_product_associate.product_number*order_product_associate.price) total_price
    from order_product_associate where  order_product_associate.create_time  BETWEEN #{startTime} and #{endTime}
    </select>
    <select id="selectByModelContract" resultMap="reportMap" parameterType="java.lang.String">
     select sum(order_product_associate.product_number) total_num,order_product_associate.product_no,order_product_associate.product_model,sum(order_product_associate.product_number*order_product_associate.price) total_price
    from order_product_associate  GROUP BY order_product_associate.product_model
    </select>


    <select id="selectContractByDemandName" resultMap="contractMap">
        select sum(`total_price`) total_price,demand_name,FROM_UNIXTIME(UNIX_TIMESTAMP(create_time),"%Y") year from
        order_product where FROM_UNIXTIME(UNIX_TIMESTAMP(create_time),"%Y") = #{year}
        <if test="startTime!=null and startTime != ''">
            and create_time&gt;=#{startTime}
        </if>
        <if test="endTime!=null and endTime != ''">
            and create_time&lt;=#{endTime}
        </if>
        group by demand_name
    </select>
    <select id="selectshouhuiContractByDemandName" resultMap="contractMap">
        select sum(`received_account`) total_price,demand_name,FROM_UNIXTIME(UNIX_TIMESTAMP(pm.create_time),"%Y") year from
        order_product op left join payment_management pm on pm.order_no=op.order_no where FROM_UNIXTIME(UNIX_TIMESTAMP(pm.create_time),"%Y") = #{year}
        <if test="startTime!=null and startTime != ''">
            and pm.create_time&gt;=#{startTime}
        </if>
        <if test="endTime!=null and endTime != ''">
            and pm.create_time&lt;=#{endTime}
        </if>
        group by op.demand_name
    </select>

    <select id="selectInvoiceAmountByDemandName" resultMap="contractMap" parameterType="java.lang.String">
        select sum(`total_amount`) total_price,invoice_company as
        demand_name,FROM_UNIXTIME(UNIX_TIMESTAMP(create_time),"%Y") as year from invoice where type=1 and status in(2)
        <if test="year!=null and year != ''">
            and FROM_UNIXTIME(UNIX_TIMESTAMP(create_time),"%Y") = #{year}
        </if>
        group by invoice_company
    </select>

    <select id="selectDeliveryAmountByDemandName" resultMap="contractMap" parameterType="java.lang.String">
        SELECT o.demand_name, ifnull(SUM(c.price), 0) total_price
        FROM order_product o
            INNER JOIN (
                SELECT order_no, price
                FROM entry_out_store_record e
                WHERE ( e.type = 1
                    AND e.operation_type = 1
                    AND e.price > 0
                    <if test="year!=null and year != ''">
                        and FROM_UNIXTIME(UNIX_TIMESTAMP(create_time),"%Y") = #{year}
                    </if>
                    )
            ) c
            ON c.order_no = o.order_no
        WHERE o.demand_name != ''
        GROUP BY o.demand_name
    </select>

</mapper>
