<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.deepsoft.haolifa.dao.repository.BizAssetsMapper">
    <resultMap id="BaseResultMap" type="com.deepsoft.haolifa.model.domain.BizAssets">
        <constructor>
            <idArg column="id" javaType="java.lang.Long" jdbcType="BIGINT" />
            <arg column="name" javaType="java.lang.String" jdbcType="VARCHAR" />
            <arg column="bh" javaType="java.lang.String" jdbcType="VARCHAR" />
            <arg column="specifications" javaType="java.lang.String" jdbcType="VARCHAR" />
            <arg column="type" javaType="java.lang.String" jdbcType="VARCHAR" />
            <arg column="manufacturer" javaType="java.lang.String" jdbcType="VARCHAR" />
            <arg column="add_type" javaType="java.lang.String" jdbcType="VARCHAR" />
            <arg column="dept_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
            <arg column="user_name" javaType="java.lang.String" jdbcType="VARCHAR" />
            <arg column="location" javaType="java.lang.String" jdbcType="VARCHAR" />
            <arg column="num" javaType="java.lang.Integer" jdbcType="INTEGER" />
            <arg column="unit" javaType="java.lang.String" jdbcType="VARCHAR" />
            <arg column="price" javaType="java.math.BigDecimal" jdbcType="DECIMAL" />
            <arg column="total_price" javaType="java.math.BigDecimal" jdbcType="DECIMAL" />
            <arg column="purchasing_time" javaType="java.util.Date" jdbcType="TIMESTAMP" />
            <arg column="start_time" javaType="java.util.Date" jdbcType="TIMESTAMP" />
            <arg column="output_rate" javaType="java.math.BigDecimal" jdbcType="DECIMAL" />
            <arg column="salvage_value" javaType="java.math.BigDecimal" jdbcType="DECIMAL" />
            <arg column="use_year" javaType="java.lang.Integer" jdbcType="INTEGER" />
            <arg column="depreciation_method" javaType="java.lang.String" jdbcType="VARCHAR" />
            <arg column="month_depreciation" javaType="java.math.BigDecimal" jdbcType="DECIMAL" />
            <arg column="accrued_month" javaType="java.lang.Integer" jdbcType="INTEGER" />
            <arg column="accumulated_depreciation" javaType="java.math.BigDecimal" jdbcType="DECIMAL" />
            <arg column="net_worth" javaType="java.math.BigDecimal" jdbcType="DECIMAL" />
            <arg column="status" javaType="java.lang.String" jdbcType="CHAR" />
            <arg column="remark" javaType="java.lang.String" jdbcType="VARCHAR" />
            <arg column="del_flag" javaType="java.lang.String" jdbcType="CHAR" />
            <arg column="create_by" javaType="java.lang.String" jdbcType="VARCHAR" />
            <arg column="create_time" javaType="java.util.Date" jdbcType="TIMESTAMP" />
            <arg column="update_by" javaType="java.lang.String" jdbcType="VARCHAR" />
            <arg column="update_time" javaType="java.util.Date" jdbcType="TIMESTAMP" />
        </constructor>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
        id, name, bh, specifications, type, manufacturer, add_type, dept_id, user_name, location,
    num, unit, price, total_price, purchasing_time, start_time, output_rate, salvage_value,
    use_year, depreciation_method, month_depreciation, accrued_month, accumulated_depreciation,
    net_worth, status, remark, del_flag, create_by, create_time, update_by, update_time
    </sql>
    <select id="selectByExample" parameterType="com.deepsoft.haolifa.model.domain.BizAssetsExample" resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List" />
        from biz_assets
        <if test="_parameter != null">
            <include refid="Example_Where_Clause" />
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from biz_assets
        where id = #{id,jdbcType=BIGINT}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        delete from biz_assets
        where id = #{id,jdbcType=BIGINT}
    </delete>
    <delete id="deleteByExample" parameterType="com.deepsoft.haolifa.model.domain.BizAssetsExample">
        delete from biz_assets
        <if test="_parameter != null">
            <include refid="Example_Where_Clause" />
        </if>
    </delete>
    <insert id="insert" parameterType="com.deepsoft.haolifa.model.domain.BizAssets">
        <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into biz_assets (name, bh, specifications,
        type, manufacturer, add_type,
        dept_id, user_name, location,
        num, unit, price, total_price,
        purchasing_time, start_time, output_rate,
        salvage_value, use_year, depreciation_method,
        month_depreciation, accrued_month, accumulated_depreciation,
        net_worth, status, remark,
        del_flag, create_by, create_time,
        update_by, update_time)
        values (#{name,jdbcType=VARCHAR}, #{bh,jdbcType=VARCHAR}, #{specifications,jdbcType=VARCHAR},
        #{type,jdbcType=VARCHAR}, #{manufacturer,jdbcType=VARCHAR}, #{addType,jdbcType=VARCHAR},
        #{deptId,jdbcType=INTEGER}, #{userName,jdbcType=VARCHAR}, #{location,jdbcType=VARCHAR},
        #{num,jdbcType=INTEGER}, #{unit,jdbcType=VARCHAR}, #{price,jdbcType=DECIMAL}, #{totalPrice,jdbcType=DECIMAL},
        #{purchasingTime,jdbcType=TIMESTAMP}, #{startTime,jdbcType=TIMESTAMP}, #{outputRate,jdbcType=DECIMAL},
        #{salvageValue,jdbcType=DECIMAL}, #{useYear,jdbcType=INTEGER}, #{depreciationMethod,jdbcType=VARCHAR},
        #{monthDepreciation,jdbcType=DECIMAL}, #{accruedMonth,jdbcType=INTEGER}, #{accumulatedDepreciation,jdbcType=DECIMAL},
        #{netWorth,jdbcType=DECIMAL}, #{status,jdbcType=CHAR}, #{remark,jdbcType=VARCHAR},
        #{delFlag,jdbcType=CHAR}, #{createBy,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP},
        #{updateBy,jdbcType=VARCHAR}, #{updateTime,jdbcType=TIMESTAMP})
    </insert>
    <insert id="insertSelective" parameterType="com.deepsoft.haolifa.model.domain.BizAssets">
        <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into biz_assets
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="name != null">
                name,
            </if>
            <if test="bh != null">
                bh,
            </if>
            <if test="specifications != null">
                specifications,
            </if>
            <if test="type != null">
                type,
            </if>
            <if test="manufacturer != null">
                manufacturer,
            </if>
            <if test="addType != null">
                add_type,
            </if>
            <if test="deptId != null">
                dept_id,
            </if>
            <if test="userName != null">
                user_name,
            </if>
            <if test="location != null">
                location,
            </if>
            <if test="num != null">
                num,
            </if>
            <if test="unit != null">
                unit,
            </if>
            <if test="price != null">
                price,
            </if>
            <if test="totalPrice != null">
                total_price,
            </if>
            <if test="purchasingTime != null">
                purchasing_time,
            </if>
            <if test="startTime != null">
                start_time,
            </if>
            <if test="outputRate != null">
                output_rate,
            </if>
            <if test="salvageValue != null">
                salvage_value,
            </if>
            <if test="useYear != null">
                use_year,
            </if>
            <if test="depreciationMethod != null">
                depreciation_method,
            </if>
            <if test="monthDepreciation != null">
                month_depreciation,
            </if>
            <if test="accruedMonth != null">
                accrued_month,
            </if>
            <if test="accumulatedDepreciation != null">
                accumulated_depreciation,
            </if>
            <if test="netWorth != null">
                net_worth,
            </if>
            <if test="status != null">
                status,
            </if>
            <if test="remark != null">
                remark,
            </if>
            <if test="delFlag != null">
                del_flag,
            </if>
            <if test="createBy != null">
                create_by,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="updateBy != null">
                update_by,
            </if>
            <if test="updateTime != null">
                update_time,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="name != null">
                #{name,jdbcType=VARCHAR},
            </if>
            <if test="bh != null">
                #{bh,jdbcType=VARCHAR},
            </if>
            <if test="specifications != null">
                #{specifications,jdbcType=VARCHAR},
            </if>
            <if test="type != null">
                #{type,jdbcType=VARCHAR},
            </if>
            <if test="manufacturer != null">
                #{manufacturer,jdbcType=VARCHAR},
            </if>
            <if test="addType != null">
                #{addType,jdbcType=VARCHAR},
            </if>
            <if test="deptId != null">
                #{deptId,jdbcType=INTEGER},
            </if>
            <if test="userName != null">
                #{userName,jdbcType=VARCHAR},
            </if>
            <if test="location != null">
                #{location,jdbcType=VARCHAR},
            </if>
            <if test="num != null">
                #{num,jdbcType=INTEGER},
            </if>
            <if test="unit != null">
                #{unit,jdbcType=VARCHAR},
            </if>
            <if test="price != null">
                #{price,jdbcType=DECIMAL},
            </if>
            <if test="totalPrice != null">
                #{totalPrice,jdbcType=DECIMAL},
            </if>
            <if test="purchasingTime != null">
                #{purchasingTime,jdbcType=TIMESTAMP},
            </if>
            <if test="startTime != null">
                #{startTime,jdbcType=TIMESTAMP},
            </if>
            <if test="outputRate != null">
                #{outputRate,jdbcType=DECIMAL},
            </if>
            <if test="salvageValue != null">
                #{salvageValue,jdbcType=DECIMAL},
            </if>
            <if test="useYear != null">
                #{useYear,jdbcType=INTEGER},
            </if>
            <if test="depreciationMethod != null">
                #{depreciationMethod,jdbcType=VARCHAR},
            </if>
            <if test="monthDepreciation != null">
                #{monthDepreciation,jdbcType=DECIMAL},
            </if>
            <if test="accruedMonth != null">
                #{accruedMonth,jdbcType=INTEGER},
            </if>
            <if test="accumulatedDepreciation != null">
                #{accumulatedDepreciation,jdbcType=DECIMAL},
            </if>
            <if test="netWorth != null">
                #{netWorth,jdbcType=DECIMAL},
            </if>
            <if test="status != null">
                #{status,jdbcType=CHAR},
            </if>
            <if test="remark != null">
                #{remark,jdbcType=VARCHAR},
            </if>
            <if test="delFlag != null">
                #{delFlag,jdbcType=CHAR},
            </if>
            <if test="createBy != null">
                #{createBy,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateBy != null">
                #{updateBy,jdbcType=VARCHAR},
            </if>
            <if test="updateTime != null">
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.deepsoft.haolifa.model.domain.BizAssetsExample" resultType="java.lang.Integer">
        select count(*) from biz_assets
        <if test="_parameter != null">
            <include refid="Example_Where_Clause" />
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update biz_assets
        <set>
            <if test="record.id != null">
                id = #{record.id,jdbcType=BIGINT},
            </if>
            <if test="record.name != null">
                name = #{record.name,jdbcType=VARCHAR},
            </if>
            <if test="record.bh != null">
                bh = #{record.bh,jdbcType=VARCHAR},
            </if>
            <if test="record.specifications != null">
                specifications = #{record.specifications,jdbcType=VARCHAR},
            </if>
            <if test="record.type != null">
                type = #{record.type,jdbcType=VARCHAR},
            </if>
            <if test="record.manufacturer != null">
                manufacturer = #{record.manufacturer,jdbcType=VARCHAR},
            </if>
            <if test="record.addType != null">
                add_type = #{record.addType,jdbcType=VARCHAR},
            </if>
            <if test="record.deptId != null">
                dept_id = #{record.deptId,jdbcType=INTEGER},
            </if>
            <if test="record.userName != null">
                user_name = #{record.userName,jdbcType=VARCHAR},
            </if>
            <if test="record.location != null">
                location = #{record.location,jdbcType=VARCHAR},
            </if>
            <if test="record.num != null">
                num = #{record.num,jdbcType=INTEGER},
            </if>
            <if test="record.unit != null">
                unit = #{record.unit,jdbcType=VARCHAR},
            </if>
            <if test="record.price != null">
                price = #{record.price,jdbcType=DECIMAL},
            </if>
            <if test="record.totalPrice != null">
                total_price = #{record.totalPrice,jdbcType=DECIMAL},
            </if>
            <if test="record.purchasingTime != null">
                purchasing_time = #{record.purchasingTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.startTime != null">
                start_time = #{record.startTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.outputRate != null">
                output_rate = #{record.outputRate,jdbcType=DECIMAL},
            </if>
            <if test="record.salvageValue != null">
                salvage_value = #{record.salvageValue,jdbcType=DECIMAL},
            </if>
            <if test="record.useYear != null">
                use_year = #{record.useYear,jdbcType=INTEGER},
            </if>
            <if test="record.depreciationMethod != null">
                depreciation_method = #{record.depreciationMethod,jdbcType=VARCHAR},
            </if>
            <if test="record.monthDepreciation != null">
                month_depreciation = #{record.monthDepreciation,jdbcType=DECIMAL},
            </if>
            <if test="record.accruedMonth != null">
                accrued_month = #{record.accruedMonth,jdbcType=INTEGER},
            </if>
            <if test="record.accumulatedDepreciation != null">
                accumulated_depreciation = #{record.accumulatedDepreciation,jdbcType=DECIMAL},
            </if>
            <if test="record.netWorth != null">
                net_worth = #{record.netWorth,jdbcType=DECIMAL},
            </if>
            <if test="record.status != null">
                status = #{record.status,jdbcType=CHAR},
            </if>
            <if test="record.remark != null">
                remark = #{record.remark,jdbcType=VARCHAR},
            </if>
            <if test="record.delFlag != null">
                del_flag = #{record.delFlag,jdbcType=CHAR},
            </if>
            <if test="record.createBy != null">
                create_by = #{record.createBy,jdbcType=VARCHAR},
            </if>
            <if test="record.createTime != null">
                create_time = #{record.createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.updateBy != null">
                update_by = #{record.updateBy,jdbcType=VARCHAR},
            </if>
            <if test="record.updateTime != null">
                update_time = #{record.updateTime,jdbcType=TIMESTAMP},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause" />
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update biz_assets
        set id = #{record.id,jdbcType=BIGINT},
        name = #{record.name,jdbcType=VARCHAR},
        bh = #{record.bh,jdbcType=VARCHAR},
        specifications = #{record.specifications,jdbcType=VARCHAR},
        type = #{record.type,jdbcType=VARCHAR},
        manufacturer = #{record.manufacturer,jdbcType=VARCHAR},
        add_type = #{record.addType,jdbcType=VARCHAR},
        dept_id = #{record.deptId,jdbcType=INTEGER},
        user_name = #{record.userName,jdbcType=VARCHAR},
        location = #{record.location,jdbcType=VARCHAR},
        num = #{record.num,jdbcType=INTEGER},
        unit = #{record.unit,jdbcType=VARCHAR},
        price = #{record.price,jdbcType=DECIMAL},
        total_price = #{record.totalPrice,jdbcType=DECIMAL},
        purchasing_time = #{record.purchasingTime,jdbcType=TIMESTAMP},
        start_time = #{record.startTime,jdbcType=TIMESTAMP},
        output_rate = #{record.outputRate,jdbcType=DECIMAL},
        salvage_value = #{record.salvageValue,jdbcType=DECIMAL},
        use_year = #{record.useYear,jdbcType=INTEGER},
        depreciation_method = #{record.depreciationMethod,jdbcType=VARCHAR},
        month_depreciation = #{record.monthDepreciation,jdbcType=DECIMAL},
        accrued_month = #{record.accruedMonth,jdbcType=INTEGER},
        accumulated_depreciation = #{record.accumulatedDepreciation,jdbcType=DECIMAL},
        net_worth = #{record.netWorth,jdbcType=DECIMAL},
        status = #{record.status,jdbcType=CHAR},
        remark = #{record.remark,jdbcType=VARCHAR},
        del_flag = #{record.delFlag,jdbcType=CHAR},
        create_by = #{record.createBy,jdbcType=VARCHAR},
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
        update_by = #{record.updateBy,jdbcType=VARCHAR},
        update_time = #{record.updateTime,jdbcType=TIMESTAMP}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause" />
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.deepsoft.haolifa.model.domain.BizAssets">
        update biz_assets
        <set>
            <if test="name != null">
                name = #{name,jdbcType=VARCHAR},
            </if>
            <if test="bh != null">
                bh = #{bh,jdbcType=VARCHAR},
            </if>
            <if test="specifications != null">
                specifications = #{specifications,jdbcType=VARCHAR},
            </if>
            <if test="type != null">
                type = #{type,jdbcType=VARCHAR},
            </if>
            <if test="manufacturer != null">
                manufacturer = #{manufacturer,jdbcType=VARCHAR},
            </if>
            <if test="addType != null">
                add_type = #{addType,jdbcType=VARCHAR},
            </if>
            <if test="deptId != null">
                dept_id = #{deptId,jdbcType=INTEGER},
            </if>
            <if test="userName != null">
                user_name = #{userName,jdbcType=VARCHAR},
            </if>
            <if test="location != null">
                location = #{location,jdbcType=VARCHAR},
            </if>
            <if test="num != null">
                num = #{num,jdbcType=INTEGER},
            </if>
            <if test="unit != null">
                unit = #{unit,jdbcType=VARCHAR},
            </if>
            <if test="price != null">
                price = #{price,jdbcType=DECIMAL},
            </if>
            <if test="totalPrice != null">
                total_price = #{totalPrice,jdbcType=DECIMAL},
            </if>
            <if test="purchasingTime != null">
                purchasing_time = #{purchasingTime,jdbcType=TIMESTAMP},
            </if>
            <if test="startTime != null">
                start_time = #{startTime,jdbcType=TIMESTAMP},
            </if>
            <if test="outputRate != null">
                output_rate = #{outputRate,jdbcType=DECIMAL},
            </if>
            <if test="salvageValue != null">
                salvage_value = #{salvageValue,jdbcType=DECIMAL},
            </if>
            <if test="useYear != null">
                use_year = #{useYear,jdbcType=INTEGER},
            </if>
            <if test="depreciationMethod != null">
                depreciation_method = #{depreciationMethod,jdbcType=VARCHAR},
            </if>
            <if test="monthDepreciation != null">
                month_depreciation = #{monthDepreciation,jdbcType=DECIMAL},
            </if>
            <if test="accruedMonth != null">
                accrued_month = #{accruedMonth,jdbcType=INTEGER},
            </if>
            <if test="accumulatedDepreciation != null">
                accumulated_depreciation = #{accumulatedDepreciation,jdbcType=DECIMAL},
            </if>
            <if test="netWorth != null">
                net_worth = #{netWorth,jdbcType=DECIMAL},
            </if>
            <if test="status != null">
                status = #{status,jdbcType=CHAR},
            </if>
            <if test="remark != null">
                remark = #{remark,jdbcType=VARCHAR},
            </if>
            <if test="delFlag != null">
                del_flag = #{delFlag,jdbcType=CHAR},
            </if>
            <if test="createBy != null">
                create_by = #{createBy,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateBy != null">
                update_by = #{updateBy,jdbcType=VARCHAR},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime,jdbcType=TIMESTAMP},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.deepsoft.haolifa.model.domain.BizAssets">
        update biz_assets
        set name = #{name,jdbcType=VARCHAR},
            bh = #{bh,jdbcType=VARCHAR},
            specifications = #{specifications,jdbcType=VARCHAR},
            type = #{type,jdbcType=VARCHAR},
            manufacturer = #{manufacturer,jdbcType=VARCHAR},
            add_type = #{addType,jdbcType=VARCHAR},
            dept_id = #{deptId,jdbcType=INTEGER},
            user_name = #{userName,jdbcType=VARCHAR},
            location = #{location,jdbcType=VARCHAR},
            num = #{num,jdbcType=INTEGER},
            unit = #{unit,jdbcType=VARCHAR},
            price = #{price,jdbcType=DECIMAL},
            total_price = #{totalPrice,jdbcType=DECIMAL},
            purchasing_time = #{purchasingTime,jdbcType=TIMESTAMP},
            start_time = #{startTime,jdbcType=TIMESTAMP},
            output_rate = #{outputRate,jdbcType=DECIMAL},
            salvage_value = #{salvageValue,jdbcType=DECIMAL},
            use_year = #{useYear,jdbcType=INTEGER},
            depreciation_method = #{depreciationMethod,jdbcType=VARCHAR},
            month_depreciation = #{monthDepreciation,jdbcType=DECIMAL},
            accrued_month = #{accruedMonth,jdbcType=INTEGER},
            accumulated_depreciation = #{accumulatedDepreciation,jdbcType=DECIMAL},
            net_worth = #{netWorth,jdbcType=DECIMAL},
            status = #{status,jdbcType=CHAR},
            remark = #{remark,jdbcType=VARCHAR},
            del_flag = #{delFlag,jdbcType=CHAR},
            create_by = #{createBy,jdbcType=VARCHAR},
            create_time = #{createTime,jdbcType=TIMESTAMP},
            update_by = #{updateBy,jdbcType=VARCHAR},
            update_time = #{updateTime,jdbcType=TIMESTAMP}
        where id = #{id,jdbcType=BIGINT}
    </update>
</mapper>
