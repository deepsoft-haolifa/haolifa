<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.deepsoft.haolifa.dao.repository.PressureInspectUnqualifiedMapper">
  <resultMap id="BaseResultMap" type="com.deepsoft.haolifa.model.domain.PressureInspectUnqualified">
    <constructor>
      <idArg column="id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="inspect_no" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="order_no" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="product_model" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="product_specifications" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="unqualified_number" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="reason" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="testing_person" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="inspector" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="inspecte_time" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="create_time" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="update_time" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="create_user_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
    </constructor>
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, inspect_no, order_no, product_model, product_specifications, unqualified_number, 
    reason, testing_person, inspector, inspecte_time, create_time, update_time, create_user_id
  </sql>
  <select id="selectByExample" parameterType="com.deepsoft.haolifa.model.domain.PressureInspectUnqualifiedExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from pressure_inspect_unqualified
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from pressure_inspect_unqualified
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from pressure_inspect_unqualified
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.deepsoft.haolifa.model.domain.PressureInspectUnqualifiedExample">
    delete from pressure_inspect_unqualified
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.deepsoft.haolifa.model.domain.PressureInspectUnqualified">
    insert into pressure_inspect_unqualified (id, inspect_no, order_no, 
      product_model, product_specifications, unqualified_number, 
      reason, testing_person, inspector, 
      inspecte_time, create_time, update_time, 
      create_user_id)
    values (#{id,jdbcType=INTEGER}, #{inspectNo,jdbcType=VARCHAR}, #{orderNo,jdbcType=VARCHAR}, 
      #{productModel,jdbcType=VARCHAR}, #{productSpecifications,jdbcType=VARCHAR}, #{unqualifiedNumber,jdbcType=INTEGER}, 
      #{reason,jdbcType=VARCHAR}, #{testingPerson,jdbcType=VARCHAR}, #{inspector,jdbcType=VARCHAR}, 
      #{inspecteTime,jdbcType=TIMESTAMP}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{createUserId,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.deepsoft.haolifa.model.domain.PressureInspectUnqualified">
    insert into pressure_inspect_unqualified
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="inspectNo != null">
        inspect_no,
      </if>
      <if test="orderNo != null">
        order_no,
      </if>
      <if test="productModel != null">
        product_model,
      </if>
      <if test="productSpecifications != null">
        product_specifications,
      </if>
      <if test="unqualifiedNumber != null">
        unqualified_number,
      </if>
      <if test="reason != null">
        reason,
      </if>
      <if test="testingPerson != null">
        testing_person,
      </if>
      <if test="inspector != null">
        inspector,
      </if>
      <if test="inspecteTime != null">
        inspecte_time,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="createUserId != null">
        create_user_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="inspectNo != null">
        #{inspectNo,jdbcType=VARCHAR},
      </if>
      <if test="orderNo != null">
        #{orderNo,jdbcType=VARCHAR},
      </if>
      <if test="productModel != null">
        #{productModel,jdbcType=VARCHAR},
      </if>
      <if test="productSpecifications != null">
        #{productSpecifications,jdbcType=VARCHAR},
      </if>
      <if test="unqualifiedNumber != null">
        #{unqualifiedNumber,jdbcType=INTEGER},
      </if>
      <if test="reason != null">
        #{reason,jdbcType=VARCHAR},
      </if>
      <if test="testingPerson != null">
        #{testingPerson,jdbcType=VARCHAR},
      </if>
      <if test="inspector != null">
        #{inspector,jdbcType=VARCHAR},
      </if>
      <if test="inspecteTime != null">
        #{inspecteTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUserId != null">
        #{createUserId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.deepsoft.haolifa.model.domain.PressureInspectUnqualifiedExample" resultType="java.lang.Long">
    select count(*) from pressure_inspect_unqualified
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update pressure_inspect_unqualified
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.inspectNo != null">
        inspect_no = #{record.inspectNo,jdbcType=VARCHAR},
      </if>
      <if test="record.orderNo != null">
        order_no = #{record.orderNo,jdbcType=VARCHAR},
      </if>
      <if test="record.productModel != null">
        product_model = #{record.productModel,jdbcType=VARCHAR},
      </if>
      <if test="record.productSpecifications != null">
        product_specifications = #{record.productSpecifications,jdbcType=VARCHAR},
      </if>
      <if test="record.unqualifiedNumber != null">
        unqualified_number = #{record.unqualifiedNumber,jdbcType=INTEGER},
      </if>
      <if test="record.reason != null">
        reason = #{record.reason,jdbcType=VARCHAR},
      </if>
      <if test="record.testingPerson != null">
        testing_person = #{record.testingPerson,jdbcType=VARCHAR},
      </if>
      <if test="record.inspector != null">
        inspector = #{record.inspector,jdbcType=VARCHAR},
      </if>
      <if test="record.inspecteTime != null">
        inspecte_time = #{record.inspecteTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createUserId != null">
        create_user_id = #{record.createUserId,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update pressure_inspect_unqualified
    set id = #{record.id,jdbcType=INTEGER},
      inspect_no = #{record.inspectNo,jdbcType=VARCHAR},
      order_no = #{record.orderNo,jdbcType=VARCHAR},
      product_model = #{record.productModel,jdbcType=VARCHAR},
      product_specifications = #{record.productSpecifications,jdbcType=VARCHAR},
      unqualified_number = #{record.unqualifiedNumber,jdbcType=INTEGER},
      reason = #{record.reason,jdbcType=VARCHAR},
      testing_person = #{record.testingPerson,jdbcType=VARCHAR},
      inspector = #{record.inspector,jdbcType=VARCHAR},
      inspecte_time = #{record.inspecteTime,jdbcType=TIMESTAMP},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      create_user_id = #{record.createUserId,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.deepsoft.haolifa.model.domain.PressureInspectUnqualified">
    update pressure_inspect_unqualified
    <set>
      <if test="inspectNo != null">
        inspect_no = #{inspectNo,jdbcType=VARCHAR},
      </if>
      <if test="orderNo != null">
        order_no = #{orderNo,jdbcType=VARCHAR},
      </if>
      <if test="productModel != null">
        product_model = #{productModel,jdbcType=VARCHAR},
      </if>
      <if test="productSpecifications != null">
        product_specifications = #{productSpecifications,jdbcType=VARCHAR},
      </if>
      <if test="unqualifiedNumber != null">
        unqualified_number = #{unqualifiedNumber,jdbcType=INTEGER},
      </if>
      <if test="reason != null">
        reason = #{reason,jdbcType=VARCHAR},
      </if>
      <if test="testingPerson != null">
        testing_person = #{testingPerson,jdbcType=VARCHAR},
      </if>
      <if test="inspector != null">
        inspector = #{inspector,jdbcType=VARCHAR},
      </if>
      <if test="inspecteTime != null">
        inspecte_time = #{inspecteTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUserId != null">
        create_user_id = #{createUserId,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.deepsoft.haolifa.model.domain.PressureInspectUnqualified">
    update pressure_inspect_unqualified
    set inspect_no = #{inspectNo,jdbcType=VARCHAR},
      order_no = #{orderNo,jdbcType=VARCHAR},
      product_model = #{productModel,jdbcType=VARCHAR},
      product_specifications = #{productSpecifications,jdbcType=VARCHAR},
      unqualified_number = #{unqualifiedNumber,jdbcType=INTEGER},
      reason = #{reason,jdbcType=VARCHAR},
      testing_person = #{testingPerson,jdbcType=VARCHAR},
      inspector = #{inspector,jdbcType=VARCHAR},
      inspecte_time = #{inspecteTime,jdbcType=TIMESTAMP},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      create_user_id = #{createUserId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>