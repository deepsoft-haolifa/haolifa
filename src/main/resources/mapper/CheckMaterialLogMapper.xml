<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.deepsoft.haolifa.dao.repository.CheckMaterialLogMapper">
  <resultMap id="BaseResultMap" type="com.deepsoft.haolifa.model.domain.CheckMaterialLog">
    <constructor>
      <idArg column="id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="create_time" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="check_user_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="order_no" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="material_graph_no" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="current_material_count" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="need_material_count" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="check_state" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="check_result" javaType="java.lang.String" jdbcType="VARCHAR" />
    </constructor>
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, create_time, check_user_id, order_no, material_graph_no, current_material_count, 
    need_material_count, check_state, check_result
  </sql>
  <select id="selectByExample" parameterType="com.deepsoft.haolifa.model.domain.CheckMaterialLogExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from check_material_log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from check_material_log
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from check_material_log
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.deepsoft.haolifa.model.domain.CheckMaterialLogExample">
    delete from check_material_log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.deepsoft.haolifa.model.domain.CheckMaterialLog">
    insert into check_material_log (id, create_time, check_user_id, 
      order_no, material_graph_no, current_material_count, 
      need_material_count, check_state, check_result
      )
    values (#{id,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, #{checkUserId,jdbcType=INTEGER}, 
      #{orderNo,jdbcType=VARCHAR}, #{materialGraphNo,jdbcType=VARCHAR}, #{currentMaterialCount,jdbcType=INTEGER}, 
      #{needMaterialCount,jdbcType=INTEGER}, #{checkState,jdbcType=VARCHAR}, #{checkResult,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.deepsoft.haolifa.model.domain.CheckMaterialLog">
    insert into check_material_log
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="checkUserId != null">
        check_user_id,
      </if>
      <if test="orderNo != null">
        order_no,
      </if>
      <if test="materialGraphNo != null">
        material_graph_no,
      </if>
      <if test="currentMaterialCount != null">
        current_material_count,
      </if>
      <if test="needMaterialCount != null">
        need_material_count,
      </if>
      <if test="checkState != null">
        check_state,
      </if>
      <if test="checkResult != null">
        check_result,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="checkUserId != null">
        #{checkUserId,jdbcType=INTEGER},
      </if>
      <if test="orderNo != null">
        #{orderNo,jdbcType=VARCHAR},
      </if>
      <if test="materialGraphNo != null">
        #{materialGraphNo,jdbcType=VARCHAR},
      </if>
      <if test="currentMaterialCount != null">
        #{currentMaterialCount,jdbcType=INTEGER},
      </if>
      <if test="needMaterialCount != null">
        #{needMaterialCount,jdbcType=INTEGER},
      </if>
      <if test="checkState != null">
        #{checkState,jdbcType=VARCHAR},
      </if>
      <if test="checkResult != null">
        #{checkResult,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.deepsoft.haolifa.model.domain.CheckMaterialLogExample" resultType="java.lang.Long">
    select count(*) from check_material_log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update check_material_log
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.checkUserId != null">
        check_user_id = #{record.checkUserId,jdbcType=INTEGER},
      </if>
      <if test="record.orderNo != null">
        order_no = #{record.orderNo,jdbcType=VARCHAR},
      </if>
      <if test="record.materialGraphNo != null">
        material_graph_no = #{record.materialGraphNo,jdbcType=VARCHAR},
      </if>
      <if test="record.currentMaterialCount != null">
        current_material_count = #{record.currentMaterialCount,jdbcType=INTEGER},
      </if>
      <if test="record.needMaterialCount != null">
        need_material_count = #{record.needMaterialCount,jdbcType=INTEGER},
      </if>
      <if test="record.checkState != null">
        check_state = #{record.checkState,jdbcType=VARCHAR},
      </if>
      <if test="record.checkResult != null">
        check_result = #{record.checkResult,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update check_material_log
    set id = #{record.id,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      check_user_id = #{record.checkUserId,jdbcType=INTEGER},
      order_no = #{record.orderNo,jdbcType=VARCHAR},
      material_graph_no = #{record.materialGraphNo,jdbcType=VARCHAR},
      current_material_count = #{record.currentMaterialCount,jdbcType=INTEGER},
      need_material_count = #{record.needMaterialCount,jdbcType=INTEGER},
      check_state = #{record.checkState,jdbcType=VARCHAR},
      check_result = #{record.checkResult,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.deepsoft.haolifa.model.domain.CheckMaterialLog">
    update check_material_log
    <set>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="checkUserId != null">
        check_user_id = #{checkUserId,jdbcType=INTEGER},
      </if>
      <if test="orderNo != null">
        order_no = #{orderNo,jdbcType=VARCHAR},
      </if>
      <if test="materialGraphNo != null">
        material_graph_no = #{materialGraphNo,jdbcType=VARCHAR},
      </if>
      <if test="currentMaterialCount != null">
        current_material_count = #{currentMaterialCount,jdbcType=INTEGER},
      </if>
      <if test="needMaterialCount != null">
        need_material_count = #{needMaterialCount,jdbcType=INTEGER},
      </if>
      <if test="checkState != null">
        check_state = #{checkState,jdbcType=VARCHAR},
      </if>
      <if test="checkResult != null">
        check_result = #{checkResult,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.deepsoft.haolifa.model.domain.CheckMaterialLog">
    update check_material_log
    set create_time = #{createTime,jdbcType=TIMESTAMP},
      check_user_id = #{checkUserId,jdbcType=INTEGER},
      order_no = #{orderNo,jdbcType=VARCHAR},
      material_graph_no = #{materialGraphNo,jdbcType=VARCHAR},
      current_material_count = #{currentMaterialCount,jdbcType=INTEGER},
      need_material_count = #{needMaterialCount,jdbcType=INTEGER},
      check_state = #{checkState,jdbcType=VARCHAR},
      check_result = #{checkResult,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>