<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.deepsoft.haolifa.dao.repository.OrderMaterialMapper">
  <resultMap id="BaseResultMap" type="com.deepsoft.haolifa.model.domain.OrderMaterial">
    <constructor>
      <idArg column="id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="create_time" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="update_time" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="create_user" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="update_user" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="order_no" javaType="java.lang.String" jdbcType="CHAR" />
      <arg column="order_product_associate_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="material_graph_no" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="replace_material_graph_no" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="material_count" javaType="java.lang.Integer" jdbcType="INTEGER" />
    </constructor>
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, create_time, update_time, create_user, update_user, order_no, order_product_associate_id, 
    material_graph_no, replace_material_graph_no, material_count
  </sql>
  <select id="selectByExample" parameterType="com.deepsoft.haolifa.model.domain.OrderMaterialExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from order_material
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from order_material
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from order_material
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.deepsoft.haolifa.model.domain.OrderMaterialExample">
    delete from order_material
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.deepsoft.haolifa.model.domain.OrderMaterial">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into order_material (create_time, update_time, create_user, 
      update_user, order_no, order_product_associate_id, 
      material_graph_no, replace_material_graph_no, 
      material_count)
    values (#{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, #{createUser,jdbcType=INTEGER}, 
      #{updateUser,jdbcType=INTEGER}, #{orderNo,jdbcType=CHAR}, #{orderProductAssociateId,jdbcType=INTEGER}, 
      #{materialGraphNo,jdbcType=VARCHAR}, #{replaceMaterialGraphNo,jdbcType=VARCHAR}, 
      #{materialCount,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.deepsoft.haolifa.model.domain.OrderMaterial">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into order_material
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="createUser != null">
        create_user,
      </if>
      <if test="updateUser != null">
        update_user,
      </if>
      <if test="orderNo != null">
        order_no,
      </if>
      <if test="orderProductAssociateId != null">
        order_product_associate_id,
      </if>
      <if test="materialGraphNo != null">
        material_graph_no,
      </if>
      <if test="replaceMaterialGraphNo != null">
        replace_material_graph_no,
      </if>
      <if test="materialCount != null">
        material_count,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUser != null">
        #{createUser,jdbcType=INTEGER},
      </if>
      <if test="updateUser != null">
        #{updateUser,jdbcType=INTEGER},
      </if>
      <if test="orderNo != null">
        #{orderNo,jdbcType=CHAR},
      </if>
      <if test="orderProductAssociateId != null">
        #{orderProductAssociateId,jdbcType=INTEGER},
      </if>
      <if test="materialGraphNo != null">
        #{materialGraphNo,jdbcType=VARCHAR},
      </if>
      <if test="replaceMaterialGraphNo != null">
        #{replaceMaterialGraphNo,jdbcType=VARCHAR},
      </if>
      <if test="materialCount != null">
        #{materialCount,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.deepsoft.haolifa.model.domain.OrderMaterialExample" resultType="java.lang.Long">
    select count(*) from order_material
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update order_material
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createUser != null">
        create_user = #{record.createUser,jdbcType=INTEGER},
      </if>
      <if test="record.updateUser != null">
        update_user = #{record.updateUser,jdbcType=INTEGER},
      </if>
      <if test="record.orderNo != null">
        order_no = #{record.orderNo,jdbcType=CHAR},
      </if>
      <if test="record.orderProductAssociateId != null">
        order_product_associate_id = #{record.orderProductAssociateId,jdbcType=INTEGER},
      </if>
      <if test="record.materialGraphNo != null">
        material_graph_no = #{record.materialGraphNo,jdbcType=VARCHAR},
      </if>
      <if test="record.replaceMaterialGraphNo != null">
        replace_material_graph_no = #{record.replaceMaterialGraphNo,jdbcType=VARCHAR},
      </if>
      <if test="record.materialCount != null">
        material_count = #{record.materialCount,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update order_material
    set id = #{record.id,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      create_user = #{record.createUser,jdbcType=INTEGER},
      update_user = #{record.updateUser,jdbcType=INTEGER},
      order_no = #{record.orderNo,jdbcType=CHAR},
      order_product_associate_id = #{record.orderProductAssociateId,jdbcType=INTEGER},
      material_graph_no = #{record.materialGraphNo,jdbcType=VARCHAR},
      replace_material_graph_no = #{record.replaceMaterialGraphNo,jdbcType=VARCHAR},
      material_count = #{record.materialCount,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.deepsoft.haolifa.model.domain.OrderMaterial">
    update order_material
    <set>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUser != null">
        create_user = #{createUser,jdbcType=INTEGER},
      </if>
      <if test="updateUser != null">
        update_user = #{updateUser,jdbcType=INTEGER},
      </if>
      <if test="orderNo != null">
        order_no = #{orderNo,jdbcType=CHAR},
      </if>
      <if test="orderProductAssociateId != null">
        order_product_associate_id = #{orderProductAssociateId,jdbcType=INTEGER},
      </if>
      <if test="materialGraphNo != null">
        material_graph_no = #{materialGraphNo,jdbcType=VARCHAR},
      </if>
      <if test="replaceMaterialGraphNo != null">
        replace_material_graph_no = #{replaceMaterialGraphNo,jdbcType=VARCHAR},
      </if>
      <if test="materialCount != null">
        material_count = #{materialCount,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.deepsoft.haolifa.model.domain.OrderMaterial">
    update order_material
    set create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      create_user = #{createUser,jdbcType=INTEGER},
      update_user = #{updateUser,jdbcType=INTEGER},
      order_no = #{orderNo,jdbcType=CHAR},
      order_product_associate_id = #{orderProductAssociateId,jdbcType=INTEGER},
      material_graph_no = #{materialGraphNo,jdbcType=VARCHAR},
      replace_material_graph_no = #{replaceMaterialGraphNo,jdbcType=VARCHAR},
      material_count = #{materialCount,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>