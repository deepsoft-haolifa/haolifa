<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.deepsoft.haolifa.dao.repository.OrderMapper">
  <resultMap id="BaseResultMap" type="com.deepsoft.haolifa.model.domain.Order">
    <constructor>
      <idArg column="id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="create_time" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="update_time" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="create_user" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="update_user" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="order_no" javaType="java.lang.String" jdbcType="CHAR" />
      <arg column="product_no" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="order_status" javaType="java.lang.Byte" jdbcType="TINYINT" />
      <arg column="product_name" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="product_model" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="lable" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="specifications" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="color" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="number" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="material_description" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="remark" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="repayment_type" javaType="java.lang.Byte" jdbcType="TINYINT" />
      <arg column="price" javaType="java.math.BigDecimal" jdbcType="DECIMAL" />
      <arg column="total_price" javaType="java.math.BigDecimal" jdbcType="DECIMAL" />
      <arg column="discount_total_price" javaType="java.math.BigDecimal" jdbcType="DECIMAL" />
      <arg column="demand side" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="supply side" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="contract_number" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="contract_sign_date" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="special_require" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="warranty_period" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="delivery_time" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="receipt_info" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="transport_type" javaType="java.lang.String" jdbcType="VARCHAR" />
    </constructor>
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, create_time, update_time, create_user, update_user, order_no, product_no, order_status, 
    product_name, product_model, lable, specifications, color, number, material_description, 
    remark, repayment_type, price, total_price, discount_total_price, "demand side", 
    "supply side", contract_number, contract_sign_date, special_require, warranty_period, 
    delivery_time, receipt_info, transport_type
  </sql>
  <select id="selectByExample" parameterType="com.deepsoft.haolifa.model.domain.OrderExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from order
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from order
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from order
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.deepsoft.haolifa.model.domain.OrderExample">
    delete from order
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.deepsoft.haolifa.model.domain.Order">
    insert into order (id, create_time, update_time, 
      create_user, update_user, order_no, 
      product_no, order_status, product_name, 
      product_model, lable, specifications, 
      color, number, material_description, 
      remark, repayment_type, price, 
      total_price, discount_total_price, "demand side", 
      "supply side", contract_number, contract_sign_date, 
      special_require, warranty_period, delivery_time, 
      receipt_info, transport_type)
    values (#{id,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{createUser,jdbcType=INTEGER}, #{updateUser,jdbcType=INTEGER}, #{orderNo,jdbcType=CHAR}, 
      #{productNo,jdbcType=VARCHAR}, #{orderStatus,jdbcType=TINYINT}, #{productName,jdbcType=VARCHAR}, 
      #{productModel,jdbcType=VARCHAR}, #{lable,jdbcType=VARCHAR}, #{specifications,jdbcType=VARCHAR}, 
      #{color,jdbcType=VARCHAR}, #{number,jdbcType=VARCHAR}, #{materialDescription,jdbcType=VARCHAR}, 
      #{remark,jdbcType=VARCHAR}, #{repaymentType,jdbcType=TINYINT}, #{price,jdbcType=DECIMAL}, 
      #{totalPrice,jdbcType=DECIMAL}, #{discountTotalPrice,jdbcType=DECIMAL}, #{demandSide,jdbcType=VARCHAR}, 
      #{supplySide,jdbcType=VARCHAR}, #{contractNumber,jdbcType=VARCHAR}, #{contractSignDate,jdbcType=VARCHAR}, 
      #{specialRequire,jdbcType=VARCHAR}, #{warrantyPeriod,jdbcType=VARCHAR}, #{deliveryTime,jdbcType=VARCHAR}, 
      #{receiptInfo,jdbcType=VARCHAR}, #{transportType,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.deepsoft.haolifa.model.domain.Order">
    insert into order
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="createUser != null">
        create_user,
      </if>
      <if test="updateUser != null">
        update_user,
      </if>
      <if test="orderNo != null">
        order_no,
      </if>
      <if test="productNo != null">
        product_no,
      </if>
      <if test="orderStatus != null">
        order_status,
      </if>
      <if test="productName != null">
        product_name,
      </if>
      <if test="productModel != null">
        product_model,
      </if>
      <if test="lable != null">
        lable,
      </if>
      <if test="specifications != null">
        specifications,
      </if>
      <if test="color != null">
        color,
      </if>
      <if test="number != null">
        number,
      </if>
      <if test="materialDescription != null">
        material_description,
      </if>
      <if test="remark != null">
        remark,
      </if>
      <if test="repaymentType != null">
        repayment_type,
      </if>
      <if test="price != null">
        price,
      </if>
      <if test="totalPrice != null">
        total_price,
      </if>
      <if test="discountTotalPrice != null">
        discount_total_price,
      </if>
      <if test="demandSide != null">
        "demand side",
      </if>
      <if test="supplySide != null">
        "supply side",
      </if>
      <if test="contractNumber != null">
        contract_number,
      </if>
      <if test="contractSignDate != null">
        contract_sign_date,
      </if>
      <if test="specialRequire != null">
        special_require,
      </if>
      <if test="warrantyPeriod != null">
        warranty_period,
      </if>
      <if test="deliveryTime != null">
        delivery_time,
      </if>
      <if test="receiptInfo != null">
        receipt_info,
      </if>
      <if test="transportType != null">
        transport_type,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUser != null">
        #{createUser,jdbcType=INTEGER},
      </if>
      <if test="updateUser != null">
        #{updateUser,jdbcType=INTEGER},
      </if>
      <if test="orderNo != null">
        #{orderNo,jdbcType=CHAR},
      </if>
      <if test="productNo != null">
        #{productNo,jdbcType=VARCHAR},
      </if>
      <if test="orderStatus != null">
        #{orderStatus,jdbcType=TINYINT},
      </if>
      <if test="productName != null">
        #{productName,jdbcType=VARCHAR},
      </if>
      <if test="productModel != null">
        #{productModel,jdbcType=VARCHAR},
      </if>
      <if test="lable != null">
        #{lable,jdbcType=VARCHAR},
      </if>
      <if test="specifications != null">
        #{specifications,jdbcType=VARCHAR},
      </if>
      <if test="color != null">
        #{color,jdbcType=VARCHAR},
      </if>
      <if test="number != null">
        #{number,jdbcType=VARCHAR},
      </if>
      <if test="materialDescription != null">
        #{materialDescription,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="repaymentType != null">
        #{repaymentType,jdbcType=TINYINT},
      </if>
      <if test="price != null">
        #{price,jdbcType=DECIMAL},
      </if>
      <if test="totalPrice != null">
        #{totalPrice,jdbcType=DECIMAL},
      </if>
      <if test="discountTotalPrice != null">
        #{discountTotalPrice,jdbcType=DECIMAL},
      </if>
      <if test="demandSide != null">
        #{demandSide,jdbcType=VARCHAR},
      </if>
      <if test="supplySide != null">
        #{supplySide,jdbcType=VARCHAR},
      </if>
      <if test="contractNumber != null">
        #{contractNumber,jdbcType=VARCHAR},
      </if>
      <if test="contractSignDate != null">
        #{contractSignDate,jdbcType=VARCHAR},
      </if>
      <if test="specialRequire != null">
        #{specialRequire,jdbcType=VARCHAR},
      </if>
      <if test="warrantyPeriod != null">
        #{warrantyPeriod,jdbcType=VARCHAR},
      </if>
      <if test="deliveryTime != null">
        #{deliveryTime,jdbcType=VARCHAR},
      </if>
      <if test="receiptInfo != null">
        #{receiptInfo,jdbcType=VARCHAR},
      </if>
      <if test="transportType != null">
        #{transportType,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.deepsoft.haolifa.model.domain.OrderExample" resultType="java.lang.Long">
    select count(*) from order
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update order
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createUser != null">
        create_user = #{record.createUser,jdbcType=INTEGER},
      </if>
      <if test="record.updateUser != null">
        update_user = #{record.updateUser,jdbcType=INTEGER},
      </if>
      <if test="record.orderNo != null">
        order_no = #{record.orderNo,jdbcType=CHAR},
      </if>
      <if test="record.productNo != null">
        product_no = #{record.productNo,jdbcType=VARCHAR},
      </if>
      <if test="record.orderStatus != null">
        order_status = #{record.orderStatus,jdbcType=TINYINT},
      </if>
      <if test="record.productName != null">
        product_name = #{record.productName,jdbcType=VARCHAR},
      </if>
      <if test="record.productModel != null">
        product_model = #{record.productModel,jdbcType=VARCHAR},
      </if>
      <if test="record.lable != null">
        lable = #{record.lable,jdbcType=VARCHAR},
      </if>
      <if test="record.specifications != null">
        specifications = #{record.specifications,jdbcType=VARCHAR},
      </if>
      <if test="record.color != null">
        color = #{record.color,jdbcType=VARCHAR},
      </if>
      <if test="record.number != null">
        number = #{record.number,jdbcType=VARCHAR},
      </if>
      <if test="record.materialDescription != null">
        material_description = #{record.materialDescription,jdbcType=VARCHAR},
      </if>
      <if test="record.remark != null">
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.repaymentType != null">
        repayment_type = #{record.repaymentType,jdbcType=TINYINT},
      </if>
      <if test="record.price != null">
        price = #{record.price,jdbcType=DECIMAL},
      </if>
      <if test="record.totalPrice != null">
        total_price = #{record.totalPrice,jdbcType=DECIMAL},
      </if>
      <if test="record.discountTotalPrice != null">
        discount_total_price = #{record.discountTotalPrice,jdbcType=DECIMAL},
      </if>
      <if test="record.demandSide != null">
        "demand side" = #{record.demandSide,jdbcType=VARCHAR},
      </if>
      <if test="record.supplySide != null">
        "supply side" = #{record.supplySide,jdbcType=VARCHAR},
      </if>
      <if test="record.contractNumber != null">
        contract_number = #{record.contractNumber,jdbcType=VARCHAR},
      </if>
      <if test="record.contractSignDate != null">
        contract_sign_date = #{record.contractSignDate,jdbcType=VARCHAR},
      </if>
      <if test="record.specialRequire != null">
        special_require = #{record.specialRequire,jdbcType=VARCHAR},
      </if>
      <if test="record.warrantyPeriod != null">
        warranty_period = #{record.warrantyPeriod,jdbcType=VARCHAR},
      </if>
      <if test="record.deliveryTime != null">
        delivery_time = #{record.deliveryTime,jdbcType=VARCHAR},
      </if>
      <if test="record.receiptInfo != null">
        receipt_info = #{record.receiptInfo,jdbcType=VARCHAR},
      </if>
      <if test="record.transportType != null">
        transport_type = #{record.transportType,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update order
    set id = #{record.id,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      create_user = #{record.createUser,jdbcType=INTEGER},
      update_user = #{record.updateUser,jdbcType=INTEGER},
      order_no = #{record.orderNo,jdbcType=CHAR},
      product_no = #{record.productNo,jdbcType=VARCHAR},
      order_status = #{record.orderStatus,jdbcType=TINYINT},
      product_name = #{record.productName,jdbcType=VARCHAR},
      product_model = #{record.productModel,jdbcType=VARCHAR},
      lable = #{record.lable,jdbcType=VARCHAR},
      specifications = #{record.specifications,jdbcType=VARCHAR},
      color = #{record.color,jdbcType=VARCHAR},
      number = #{record.number,jdbcType=VARCHAR},
      material_description = #{record.materialDescription,jdbcType=VARCHAR},
      remark = #{record.remark,jdbcType=VARCHAR},
      repayment_type = #{record.repaymentType,jdbcType=TINYINT},
      price = #{record.price,jdbcType=DECIMAL},
      total_price = #{record.totalPrice,jdbcType=DECIMAL},
      discount_total_price = #{record.discountTotalPrice,jdbcType=DECIMAL},
      "demand side" = #{record.demandSide,jdbcType=VARCHAR},
      "supply side" = #{record.supplySide,jdbcType=VARCHAR},
      contract_number = #{record.contractNumber,jdbcType=VARCHAR},
      contract_sign_date = #{record.contractSignDate,jdbcType=VARCHAR},
      special_require = #{record.specialRequire,jdbcType=VARCHAR},
      warranty_period = #{record.warrantyPeriod,jdbcType=VARCHAR},
      delivery_time = #{record.deliveryTime,jdbcType=VARCHAR},
      receipt_info = #{record.receiptInfo,jdbcType=VARCHAR},
      transport_type = #{record.transportType,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.deepsoft.haolifa.model.domain.Order">
    update order
    <set>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUser != null">
        create_user = #{createUser,jdbcType=INTEGER},
      </if>
      <if test="updateUser != null">
        update_user = #{updateUser,jdbcType=INTEGER},
      </if>
      <if test="orderNo != null">
        order_no = #{orderNo,jdbcType=CHAR},
      </if>
      <if test="productNo != null">
        product_no = #{productNo,jdbcType=VARCHAR},
      </if>
      <if test="orderStatus != null">
        order_status = #{orderStatus,jdbcType=TINYINT},
      </if>
      <if test="productName != null">
        product_name = #{productName,jdbcType=VARCHAR},
      </if>
      <if test="productModel != null">
        product_model = #{productModel,jdbcType=VARCHAR},
      </if>
      <if test="lable != null">
        lable = #{lable,jdbcType=VARCHAR},
      </if>
      <if test="specifications != null">
        specifications = #{specifications,jdbcType=VARCHAR},
      </if>
      <if test="color != null">
        color = #{color,jdbcType=VARCHAR},
      </if>
      <if test="number != null">
        number = #{number,jdbcType=VARCHAR},
      </if>
      <if test="materialDescription != null">
        material_description = #{materialDescription,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="repaymentType != null">
        repayment_type = #{repaymentType,jdbcType=TINYINT},
      </if>
      <if test="price != null">
        price = #{price,jdbcType=DECIMAL},
      </if>
      <if test="totalPrice != null">
        total_price = #{totalPrice,jdbcType=DECIMAL},
      </if>
      <if test="discountTotalPrice != null">
        discount_total_price = #{discountTotalPrice,jdbcType=DECIMAL},
      </if>
      <if test="demandSide != null">
        "demand side" = #{demandSide,jdbcType=VARCHAR},
      </if>
      <if test="supplySide != null">
        "supply side" = #{supplySide,jdbcType=VARCHAR},
      </if>
      <if test="contractNumber != null">
        contract_number = #{contractNumber,jdbcType=VARCHAR},
      </if>
      <if test="contractSignDate != null">
        contract_sign_date = #{contractSignDate,jdbcType=VARCHAR},
      </if>
      <if test="specialRequire != null">
        special_require = #{specialRequire,jdbcType=VARCHAR},
      </if>
      <if test="warrantyPeriod != null">
        warranty_period = #{warrantyPeriod,jdbcType=VARCHAR},
      </if>
      <if test="deliveryTime != null">
        delivery_time = #{deliveryTime,jdbcType=VARCHAR},
      </if>
      <if test="receiptInfo != null">
        receipt_info = #{receiptInfo,jdbcType=VARCHAR},
      </if>
      <if test="transportType != null">
        transport_type = #{transportType,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.deepsoft.haolifa.model.domain.Order">
    update order
    set create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      create_user = #{createUser,jdbcType=INTEGER},
      update_user = #{updateUser,jdbcType=INTEGER},
      order_no = #{orderNo,jdbcType=CHAR},
      product_no = #{productNo,jdbcType=VARCHAR},
      order_status = #{orderStatus,jdbcType=TINYINT},
      product_name = #{productName,jdbcType=VARCHAR},
      product_model = #{productModel,jdbcType=VARCHAR},
      lable = #{lable,jdbcType=VARCHAR},
      specifications = #{specifications,jdbcType=VARCHAR},
      color = #{color,jdbcType=VARCHAR},
      number = #{number,jdbcType=VARCHAR},
      material_description = #{materialDescription,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR},
      repayment_type = #{repaymentType,jdbcType=TINYINT},
      price = #{price,jdbcType=DECIMAL},
      total_price = #{totalPrice,jdbcType=DECIMAL},
      discount_total_price = #{discountTotalPrice,jdbcType=DECIMAL},
      "demand side" = #{demandSide,jdbcType=VARCHAR},
      "supply side" = #{supplySide,jdbcType=VARCHAR},
      contract_number = #{contractNumber,jdbcType=VARCHAR},
      contract_sign_date = #{contractSignDate,jdbcType=VARCHAR},
      special_require = #{specialRequire,jdbcType=VARCHAR},
      warranty_period = #{warrantyPeriod,jdbcType=VARCHAR},
      delivery_time = #{deliveryTime,jdbcType=VARCHAR},
      receipt_info = #{receiptInfo,jdbcType=VARCHAR},
      transport_type = #{transportType,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>