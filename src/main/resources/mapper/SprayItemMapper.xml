<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.deepsoft.haolifa.dao.repository.SprayItemMapper" >
  <resultMap id="BaseResultMap" type="com.deepsoft.haolifa.model.domain.SprayItem" >
    <constructor >
      <idArg column="id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="spray_no" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="material_graph_no" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="sprayed_graph_no" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="specifications" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="model" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="material_name" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="material" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="special_requires" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="spray_color" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="number" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="qualified_number" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="remark" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="complete_time" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="create_time" jdbcType="TIMESTAMP" javaType="java.util.Date" />
      <arg column="update_time" jdbcType="TIMESTAMP" javaType="java.util.Date" />
      <arg column="batch_number" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="out_room_status" jdbcType="TINYINT" javaType="java.lang.Byte" />
    </constructor>
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, spray_no, material_graph_no, sprayed_graph_no, specifications, model, material_name, 
    material, special_requires, spray_color, number, qualified_number, remark, complete_time, 
    create_time, update_time, batch_number, out_room_status
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.deepsoft.haolifa.model.domain.SprayItemExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from spray_item
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from spray_item
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from spray_item
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.deepsoft.haolifa.model.domain.SprayItemExample" >
    delete from spray_item
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.deepsoft.haolifa.model.domain.SprayItem" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into spray_item (spray_no, material_graph_no, sprayed_graph_no, 
      specifications, model, material_name, 
      material, special_requires, spray_color, 
      number, qualified_number, remark, 
      complete_time, create_time, update_time, 
      batch_number, out_room_status)
    values (#{sprayNo,jdbcType=VARCHAR}, #{materialGraphNo,jdbcType=VARCHAR}, #{sprayedGraphNo,jdbcType=VARCHAR}, 
      #{specifications,jdbcType=VARCHAR}, #{model,jdbcType=VARCHAR}, #{materialName,jdbcType=VARCHAR}, 
      #{material,jdbcType=VARCHAR}, #{specialRequires,jdbcType=VARCHAR}, #{sprayColor,jdbcType=VARCHAR}, 
      #{number,jdbcType=INTEGER}, #{qualifiedNumber,jdbcType=INTEGER}, #{remark,jdbcType=VARCHAR}, 
      #{completeTime,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{batchNumber,jdbcType=VARCHAR}, #{outRoomStatus,jdbcType=TINYINT})
  </insert>
  <insert id="insertSelective" parameterType="com.deepsoft.haolifa.model.domain.SprayItem" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into spray_item
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="sprayNo != null" >
        spray_no,
      </if>
      <if test="materialGraphNo != null" >
        material_graph_no,
      </if>
      <if test="sprayedGraphNo != null" >
        sprayed_graph_no,
      </if>
      <if test="specifications != null" >
        specifications,
      </if>
      <if test="model != null" >
        model,
      </if>
      <if test="materialName != null" >
        material_name,
      </if>
      <if test="material != null" >
        material,
      </if>
      <if test="specialRequires != null" >
        special_requires,
      </if>
      <if test="sprayColor != null" >
        spray_color,
      </if>
      <if test="number != null" >
        number,
      </if>
      <if test="qualifiedNumber != null" >
        qualified_number,
      </if>
      <if test="remark != null" >
        remark,
      </if>
      <if test="completeTime != null" >
        complete_time,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="batchNumber != null" >
        batch_number,
      </if>
      <if test="outRoomStatus != null" >
        out_room_status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="sprayNo != null" >
        #{sprayNo,jdbcType=VARCHAR},
      </if>
      <if test="materialGraphNo != null" >
        #{materialGraphNo,jdbcType=VARCHAR},
      </if>
      <if test="sprayedGraphNo != null" >
        #{sprayedGraphNo,jdbcType=VARCHAR},
      </if>
      <if test="specifications != null" >
        #{specifications,jdbcType=VARCHAR},
      </if>
      <if test="model != null" >
        #{model,jdbcType=VARCHAR},
      </if>
      <if test="materialName != null" >
        #{materialName,jdbcType=VARCHAR},
      </if>
      <if test="material != null" >
        #{material,jdbcType=VARCHAR},
      </if>
      <if test="specialRequires != null" >
        #{specialRequires,jdbcType=VARCHAR},
      </if>
      <if test="sprayColor != null" >
        #{sprayColor,jdbcType=VARCHAR},
      </if>
      <if test="number != null" >
        #{number,jdbcType=INTEGER},
      </if>
      <if test="qualifiedNumber != null" >
        #{qualifiedNumber,jdbcType=INTEGER},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="completeTime != null" >
        #{completeTime,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="batchNumber != null" >
        #{batchNumber,jdbcType=VARCHAR},
      </if>
      <if test="outRoomStatus != null" >
        #{outRoomStatus,jdbcType=TINYINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.deepsoft.haolifa.model.domain.SprayItemExample" resultType="java.lang.Integer" >
    select count(*) from spray_item
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update spray_item
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.sprayNo != null" >
        spray_no = #{record.sprayNo,jdbcType=VARCHAR},
      </if>
      <if test="record.materialGraphNo != null" >
        material_graph_no = #{record.materialGraphNo,jdbcType=VARCHAR},
      </if>
      <if test="record.sprayedGraphNo != null" >
        sprayed_graph_no = #{record.sprayedGraphNo,jdbcType=VARCHAR},
      </if>
      <if test="record.specifications != null" >
        specifications = #{record.specifications,jdbcType=VARCHAR},
      </if>
      <if test="record.model != null" >
        model = #{record.model,jdbcType=VARCHAR},
      </if>
      <if test="record.materialName != null" >
        material_name = #{record.materialName,jdbcType=VARCHAR},
      </if>
      <if test="record.material != null" >
        material = #{record.material,jdbcType=VARCHAR},
      </if>
      <if test="record.specialRequires != null" >
        special_requires = #{record.specialRequires,jdbcType=VARCHAR},
      </if>
      <if test="record.sprayColor != null" >
        spray_color = #{record.sprayColor,jdbcType=VARCHAR},
      </if>
      <if test="record.number != null" >
        number = #{record.number,jdbcType=INTEGER},
      </if>
      <if test="record.qualifiedNumber != null" >
        qualified_number = #{record.qualifiedNumber,jdbcType=INTEGER},
      </if>
      <if test="record.remark != null" >
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.completeTime != null" >
        complete_time = #{record.completeTime,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null" >
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.batchNumber != null" >
        batch_number = #{record.batchNumber,jdbcType=VARCHAR},
      </if>
      <if test="record.outRoomStatus != null" >
        out_room_status = #{record.outRoomStatus,jdbcType=TINYINT},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update spray_item
    set id = #{record.id,jdbcType=INTEGER},
      spray_no = #{record.sprayNo,jdbcType=VARCHAR},
      material_graph_no = #{record.materialGraphNo,jdbcType=VARCHAR},
      sprayed_graph_no = #{record.sprayedGraphNo,jdbcType=VARCHAR},
      specifications = #{record.specifications,jdbcType=VARCHAR},
      model = #{record.model,jdbcType=VARCHAR},
      material_name = #{record.materialName,jdbcType=VARCHAR},
      material = #{record.material,jdbcType=VARCHAR},
      special_requires = #{record.specialRequires,jdbcType=VARCHAR},
      spray_color = #{record.sprayColor,jdbcType=VARCHAR},
      number = #{record.number,jdbcType=INTEGER},
      qualified_number = #{record.qualifiedNumber,jdbcType=INTEGER},
      remark = #{record.remark,jdbcType=VARCHAR},
      complete_time = #{record.completeTime,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      batch_number = #{record.batchNumber,jdbcType=VARCHAR},
      out_room_status = #{record.outRoomStatus,jdbcType=TINYINT}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.deepsoft.haolifa.model.domain.SprayItem" >
    update spray_item
    <set >
      <if test="sprayNo != null" >
        spray_no = #{sprayNo,jdbcType=VARCHAR},
      </if>
      <if test="materialGraphNo != null" >
        material_graph_no = #{materialGraphNo,jdbcType=VARCHAR},
      </if>
      <if test="sprayedGraphNo != null" >
        sprayed_graph_no = #{sprayedGraphNo,jdbcType=VARCHAR},
      </if>
      <if test="specifications != null" >
        specifications = #{specifications,jdbcType=VARCHAR},
      </if>
      <if test="model != null" >
        model = #{model,jdbcType=VARCHAR},
      </if>
      <if test="materialName != null" >
        material_name = #{materialName,jdbcType=VARCHAR},
      </if>
      <if test="material != null" >
        material = #{material,jdbcType=VARCHAR},
      </if>
      <if test="specialRequires != null" >
        special_requires = #{specialRequires,jdbcType=VARCHAR},
      </if>
      <if test="sprayColor != null" >
        spray_color = #{sprayColor,jdbcType=VARCHAR},
      </if>
      <if test="number != null" >
        number = #{number,jdbcType=INTEGER},
      </if>
      <if test="qualifiedNumber != null" >
        qualified_number = #{qualifiedNumber,jdbcType=INTEGER},
      </if>
      <if test="remark != null" >
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="completeTime != null" >
        complete_time = #{completeTime,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="batchNumber != null" >
        batch_number = #{batchNumber,jdbcType=VARCHAR},
      </if>
      <if test="outRoomStatus != null" >
        out_room_status = #{outRoomStatus,jdbcType=TINYINT},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.deepsoft.haolifa.model.domain.SprayItem" >
    update spray_item
    set spray_no = #{sprayNo,jdbcType=VARCHAR},
      material_graph_no = #{materialGraphNo,jdbcType=VARCHAR},
      sprayed_graph_no = #{sprayedGraphNo,jdbcType=VARCHAR},
      specifications = #{specifications,jdbcType=VARCHAR},
      model = #{model,jdbcType=VARCHAR},
      material_name = #{materialName,jdbcType=VARCHAR},
      material = #{material,jdbcType=VARCHAR},
      special_requires = #{specialRequires,jdbcType=VARCHAR},
      spray_color = #{sprayColor,jdbcType=VARCHAR},
      number = #{number,jdbcType=INTEGER},
      qualified_number = #{qualifiedNumber,jdbcType=INTEGER},
      remark = #{remark,jdbcType=VARCHAR},
      complete_time = #{completeTime,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      batch_number = #{batchNumber,jdbcType=VARCHAR},
      out_room_status = #{outRoomStatus,jdbcType=TINYINT}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>