<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.deepsoft.haolifa.dao.repository.ReplaceMaterialListMapper">
  <resultMap id="BaseResultMap" type="com.deepsoft.haolifa.model.domain.ReplaceMaterialList">
    <constructor>
      <idArg column="id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="create_time" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="update_time" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="order_no" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="material_graph_no" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="material_name" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="material_unit" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="material_count" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="replace_reason" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="responsible_person" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="audit_user_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="audit_info" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="audit_time" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="audit_result" javaType="java.lang.Byte" jdbcType="TINYINT" />
      <arg column="remark" javaType="java.lang.String" jdbcType="VARCHAR" />
    </constructor>
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, create_time, update_time, order_no, material_graph_no, material_name, material_unit, 
    material_count, replace_reason, responsible_person, audit_user_id, audit_info, audit_time, 
    audit_result, remark
  </sql>
  <select id="selectByExample" parameterType="com.deepsoft.haolifa.model.domain.ReplaceMaterialListExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from replace_material_list
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from replace_material_list
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from replace_material_list
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.deepsoft.haolifa.model.domain.ReplaceMaterialListExample">
    delete from replace_material_list
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.deepsoft.haolifa.model.domain.ReplaceMaterialList">
    insert into replace_material_list (id, create_time, update_time, 
      order_no, material_graph_no, material_name, 
      material_unit, material_count, replace_reason, 
      responsible_person, audit_user_id, audit_info, 
      audit_time, audit_result, remark
      )
    values (#{id,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{orderNo,jdbcType=VARCHAR}, #{materialGraphNo,jdbcType=VARCHAR}, #{materialName,jdbcType=VARCHAR}, 
      #{materialUnit,jdbcType=VARCHAR}, #{materialCount,jdbcType=INTEGER}, #{replaceReason,jdbcType=VARCHAR}, 
      #{responsiblePerson,jdbcType=VARCHAR}, #{auditUserId,jdbcType=INTEGER}, #{auditInfo,jdbcType=VARCHAR}, 
      #{auditTime,jdbcType=TIMESTAMP}, #{auditResult,jdbcType=TINYINT}, #{remark,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.deepsoft.haolifa.model.domain.ReplaceMaterialList">
    insert into replace_material_list
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="orderNo != null">
        order_no,
      </if>
      <if test="materialGraphNo != null">
        material_graph_no,
      </if>
      <if test="materialName != null">
        material_name,
      </if>
      <if test="materialUnit != null">
        material_unit,
      </if>
      <if test="materialCount != null">
        material_count,
      </if>
      <if test="replaceReason != null">
        replace_reason,
      </if>
      <if test="responsiblePerson != null">
        responsible_person,
      </if>
      <if test="auditUserId != null">
        audit_user_id,
      </if>
      <if test="auditInfo != null">
        audit_info,
      </if>
      <if test="auditTime != null">
        audit_time,
      </if>
      <if test="auditResult != null">
        audit_result,
      </if>
      <if test="remark != null">
        remark,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="orderNo != null">
        #{orderNo,jdbcType=VARCHAR},
      </if>
      <if test="materialGraphNo != null">
        #{materialGraphNo,jdbcType=VARCHAR},
      </if>
      <if test="materialName != null">
        #{materialName,jdbcType=VARCHAR},
      </if>
      <if test="materialUnit != null">
        #{materialUnit,jdbcType=VARCHAR},
      </if>
      <if test="materialCount != null">
        #{materialCount,jdbcType=INTEGER},
      </if>
      <if test="replaceReason != null">
        #{replaceReason,jdbcType=VARCHAR},
      </if>
      <if test="responsiblePerson != null">
        #{responsiblePerson,jdbcType=VARCHAR},
      </if>
      <if test="auditUserId != null">
        #{auditUserId,jdbcType=INTEGER},
      </if>
      <if test="auditInfo != null">
        #{auditInfo,jdbcType=VARCHAR},
      </if>
      <if test="auditTime != null">
        #{auditTime,jdbcType=TIMESTAMP},
      </if>
      <if test="auditResult != null">
        #{auditResult,jdbcType=TINYINT},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.deepsoft.haolifa.model.domain.ReplaceMaterialListExample" resultType="java.lang.Long">
    select count(*) from replace_material_list
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update replace_material_list
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.orderNo != null">
        order_no = #{record.orderNo,jdbcType=VARCHAR},
      </if>
      <if test="record.materialGraphNo != null">
        material_graph_no = #{record.materialGraphNo,jdbcType=VARCHAR},
      </if>
      <if test="record.materialName != null">
        material_name = #{record.materialName,jdbcType=VARCHAR},
      </if>
      <if test="record.materialUnit != null">
        material_unit = #{record.materialUnit,jdbcType=VARCHAR},
      </if>
      <if test="record.materialCount != null">
        material_count = #{record.materialCount,jdbcType=INTEGER},
      </if>
      <if test="record.replaceReason != null">
        replace_reason = #{record.replaceReason,jdbcType=VARCHAR},
      </if>
      <if test="record.responsiblePerson != null">
        responsible_person = #{record.responsiblePerson,jdbcType=VARCHAR},
      </if>
      <if test="record.auditUserId != null">
        audit_user_id = #{record.auditUserId,jdbcType=INTEGER},
      </if>
      <if test="record.auditInfo != null">
        audit_info = #{record.auditInfo,jdbcType=VARCHAR},
      </if>
      <if test="record.auditTime != null">
        audit_time = #{record.auditTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.auditResult != null">
        audit_result = #{record.auditResult,jdbcType=TINYINT},
      </if>
      <if test="record.remark != null">
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update replace_material_list
    set id = #{record.id,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      order_no = #{record.orderNo,jdbcType=VARCHAR},
      material_graph_no = #{record.materialGraphNo,jdbcType=VARCHAR},
      material_name = #{record.materialName,jdbcType=VARCHAR},
      material_unit = #{record.materialUnit,jdbcType=VARCHAR},
      material_count = #{record.materialCount,jdbcType=INTEGER},
      replace_reason = #{record.replaceReason,jdbcType=VARCHAR},
      responsible_person = #{record.responsiblePerson,jdbcType=VARCHAR},
      audit_user_id = #{record.auditUserId,jdbcType=INTEGER},
      audit_info = #{record.auditInfo,jdbcType=VARCHAR},
      audit_time = #{record.auditTime,jdbcType=TIMESTAMP},
      audit_result = #{record.auditResult,jdbcType=TINYINT},
      remark = #{record.remark,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.deepsoft.haolifa.model.domain.ReplaceMaterialList">
    update replace_material_list
    <set>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="orderNo != null">
        order_no = #{orderNo,jdbcType=VARCHAR},
      </if>
      <if test="materialGraphNo != null">
        material_graph_no = #{materialGraphNo,jdbcType=VARCHAR},
      </if>
      <if test="materialName != null">
        material_name = #{materialName,jdbcType=VARCHAR},
      </if>
      <if test="materialUnit != null">
        material_unit = #{materialUnit,jdbcType=VARCHAR},
      </if>
      <if test="materialCount != null">
        material_count = #{materialCount,jdbcType=INTEGER},
      </if>
      <if test="replaceReason != null">
        replace_reason = #{replaceReason,jdbcType=VARCHAR},
      </if>
      <if test="responsiblePerson != null">
        responsible_person = #{responsiblePerson,jdbcType=VARCHAR},
      </if>
      <if test="auditUserId != null">
        audit_user_id = #{auditUserId,jdbcType=INTEGER},
      </if>
      <if test="auditInfo != null">
        audit_info = #{auditInfo,jdbcType=VARCHAR},
      </if>
      <if test="auditTime != null">
        audit_time = #{auditTime,jdbcType=TIMESTAMP},
      </if>
      <if test="auditResult != null">
        audit_result = #{auditResult,jdbcType=TINYINT},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.deepsoft.haolifa.model.domain.ReplaceMaterialList">
    update replace_material_list
    set create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      order_no = #{orderNo,jdbcType=VARCHAR},
      material_graph_no = #{materialGraphNo,jdbcType=VARCHAR},
      material_name = #{materialName,jdbcType=VARCHAR},
      material_unit = #{materialUnit,jdbcType=VARCHAR},
      material_count = #{materialCount,jdbcType=INTEGER},
      replace_reason = #{replaceReason,jdbcType=VARCHAR},
      responsible_person = #{responsiblePerson,jdbcType=VARCHAR},
      audit_user_id = #{auditUserId,jdbcType=INTEGER},
      audit_info = #{auditInfo,jdbcType=VARCHAR},
      audit_time = #{auditTime,jdbcType=TIMESTAMP},
      audit_result = #{auditResult,jdbcType=TINYINT},
      remark = #{remark,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>