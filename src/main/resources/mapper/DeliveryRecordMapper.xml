<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.deepsoft.haolifa.dao.repository.DeliveryRecordMapper">
  <resultMap id="BaseResultMap" type="com.deepsoft.haolifa.model.domain.DeliveryRecord">
    <constructor>
      <idArg column="id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="create_time" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="update_time" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="create_user_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="delivery_classify" javaType="java.lang.Byte" jdbcType="TINYINT" />
      <arg column="delivery_notice_no" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="contract_order_no" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="delivery_time" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="operation_no" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="customer_no" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="product_count" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="packing_mode" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="piece_count" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="transport_company" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="courier_no" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="collect_province" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="collect_address" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="collect_name" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="collect_phone" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="weight_piece" javaType="java.math.BigDecimal" jdbcType="DECIMAL" />
      <arg column="price_piece" javaType="java.math.BigDecimal" jdbcType="DECIMAL" />
      <arg column="delivery_fee" javaType="java.math.BigDecimal" jdbcType="DECIMAL" />
      <arg column="total_fee" javaType="java.math.BigDecimal" jdbcType="DECIMAL" />
      <arg column="settlement_way" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="remark" javaType="java.lang.String" jdbcType="VARCHAR" />
    </constructor>
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, create_time, update_time, create_user_id, delivery_classify, delivery_notice_no, 
    contract_order_no, delivery_time, operation_no, customer_no, product_count, packing_mode, 
    piece_count, transport_company, courier_no, collect_province, collect_address, collect_name, 
    collect_phone, weight_piece, price_piece, delivery_fee, total_fee, settlement_way, 
    remark
  </sql>
  <select id="selectByExample" parameterType="com.deepsoft.haolifa.model.domain.DeliveryRecordExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from delivery_record
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from delivery_record
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from delivery_record
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.deepsoft.haolifa.model.domain.DeliveryRecordExample">
    delete from delivery_record
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.deepsoft.haolifa.model.domain.DeliveryRecord">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into delivery_record (create_time, update_time, create_user_id, 
      delivery_classify, delivery_notice_no, contract_order_no, 
      delivery_time, operation_no, customer_no, 
      product_count, packing_mode, piece_count, 
      transport_company, courier_no, collect_province, 
      collect_address, collect_name, collect_phone, 
      weight_piece, price_piece, delivery_fee, 
      total_fee, settlement_way, remark
      )
    values (#{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, #{createUserId,jdbcType=INTEGER}, 
      #{deliveryClassify,jdbcType=TINYINT}, #{deliveryNoticeNo,jdbcType=VARCHAR}, #{contractOrderNo,jdbcType=VARCHAR}, 
      #{deliveryTime,jdbcType=TIMESTAMP}, #{operationNo,jdbcType=VARCHAR}, #{customerNo,jdbcType=VARCHAR}, 
      #{productCount,jdbcType=INTEGER}, #{packingMode,jdbcType=VARCHAR}, #{pieceCount,jdbcType=INTEGER}, 
      #{transportCompany,jdbcType=VARCHAR}, #{courierNo,jdbcType=VARCHAR}, #{collectProvince,jdbcType=VARCHAR}, 
      #{collectAddress,jdbcType=VARCHAR}, #{collectName,jdbcType=VARCHAR}, #{collectPhone,jdbcType=VARCHAR}, 
      #{weightPiece,jdbcType=DECIMAL}, #{pricePiece,jdbcType=DECIMAL}, #{deliveryFee,jdbcType=DECIMAL}, 
      #{totalFee,jdbcType=DECIMAL}, #{settlementWay,jdbcType=VARCHAR}, #{remark,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.deepsoft.haolifa.model.domain.DeliveryRecord">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into delivery_record
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="createUserId != null">
        create_user_id,
      </if>
      <if test="deliveryClassify != null">
        delivery_classify,
      </if>
      <if test="deliveryNoticeNo != null">
        delivery_notice_no,
      </if>
      <if test="contractOrderNo != null">
        contract_order_no,
      </if>
      <if test="deliveryTime != null">
        delivery_time,
      </if>
      <if test="operationNo != null">
        operation_no,
      </if>
      <if test="customerNo != null">
        customer_no,
      </if>
      <if test="productCount != null">
        product_count,
      </if>
      <if test="packingMode != null">
        packing_mode,
      </if>
      <if test="pieceCount != null">
        piece_count,
      </if>
      <if test="transportCompany != null">
        transport_company,
      </if>
      <if test="courierNo != null">
        courier_no,
      </if>
      <if test="collectProvince != null">
        collect_province,
      </if>
      <if test="collectAddress != null">
        collect_address,
      </if>
      <if test="collectName != null">
        collect_name,
      </if>
      <if test="collectPhone != null">
        collect_phone,
      </if>
      <if test="weightPiece != null">
        weight_piece,
      </if>
      <if test="pricePiece != null">
        price_piece,
      </if>
      <if test="deliveryFee != null">
        delivery_fee,
      </if>
      <if test="totalFee != null">
        total_fee,
      </if>
      <if test="settlementWay != null">
        settlement_way,
      </if>
      <if test="remark != null">
        remark,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUserId != null">
        #{createUserId,jdbcType=INTEGER},
      </if>
      <if test="deliveryClassify != null">
        #{deliveryClassify,jdbcType=TINYINT},
      </if>
      <if test="deliveryNoticeNo != null">
        #{deliveryNoticeNo,jdbcType=VARCHAR},
      </if>
      <if test="contractOrderNo != null">
        #{contractOrderNo,jdbcType=VARCHAR},
      </if>
      <if test="deliveryTime != null">
        #{deliveryTime,jdbcType=TIMESTAMP},
      </if>
      <if test="operationNo != null">
        #{operationNo,jdbcType=VARCHAR},
      </if>
      <if test="customerNo != null">
        #{customerNo,jdbcType=VARCHAR},
      </if>
      <if test="productCount != null">
        #{productCount,jdbcType=INTEGER},
      </if>
      <if test="packingMode != null">
        #{packingMode,jdbcType=VARCHAR},
      </if>
      <if test="pieceCount != null">
        #{pieceCount,jdbcType=INTEGER},
      </if>
      <if test="transportCompany != null">
        #{transportCompany,jdbcType=VARCHAR},
      </if>
      <if test="courierNo != null">
        #{courierNo,jdbcType=VARCHAR},
      </if>
      <if test="collectProvince != null">
        #{collectProvince,jdbcType=VARCHAR},
      </if>
      <if test="collectAddress != null">
        #{collectAddress,jdbcType=VARCHAR},
      </if>
      <if test="collectName != null">
        #{collectName,jdbcType=VARCHAR},
      </if>
      <if test="collectPhone != null">
        #{collectPhone,jdbcType=VARCHAR},
      </if>
      <if test="weightPiece != null">
        #{weightPiece,jdbcType=DECIMAL},
      </if>
      <if test="pricePiece != null">
        #{pricePiece,jdbcType=DECIMAL},
      </if>
      <if test="deliveryFee != null">
        #{deliveryFee,jdbcType=DECIMAL},
      </if>
      <if test="totalFee != null">
        #{totalFee,jdbcType=DECIMAL},
      </if>
      <if test="settlementWay != null">
        #{settlementWay,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.deepsoft.haolifa.model.domain.DeliveryRecordExample" resultType="java.lang.Long">
    select count(*) from delivery_record
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update delivery_record
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createUserId != null">
        create_user_id = #{record.createUserId,jdbcType=INTEGER},
      </if>
      <if test="record.deliveryClassify != null">
        delivery_classify = #{record.deliveryClassify,jdbcType=TINYINT},
      </if>
      <if test="record.deliveryNoticeNo != null">
        delivery_notice_no = #{record.deliveryNoticeNo,jdbcType=VARCHAR},
      </if>
      <if test="record.contractOrderNo != null">
        contract_order_no = #{record.contractOrderNo,jdbcType=VARCHAR},
      </if>
      <if test="record.deliveryTime != null">
        delivery_time = #{record.deliveryTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.operationNo != null">
        operation_no = #{record.operationNo,jdbcType=VARCHAR},
      </if>
      <if test="record.customerNo != null">
        customer_no = #{record.customerNo,jdbcType=VARCHAR},
      </if>
      <if test="record.productCount != null">
        product_count = #{record.productCount,jdbcType=INTEGER},
      </if>
      <if test="record.packingMode != null">
        packing_mode = #{record.packingMode,jdbcType=VARCHAR},
      </if>
      <if test="record.pieceCount != null">
        piece_count = #{record.pieceCount,jdbcType=INTEGER},
      </if>
      <if test="record.transportCompany != null">
        transport_company = #{record.transportCompany,jdbcType=VARCHAR},
      </if>
      <if test="record.courierNo != null">
        courier_no = #{record.courierNo,jdbcType=VARCHAR},
      </if>
      <if test="record.collectProvince != null">
        collect_province = #{record.collectProvince,jdbcType=VARCHAR},
      </if>
      <if test="record.collectAddress != null">
        collect_address = #{record.collectAddress,jdbcType=VARCHAR},
      </if>
      <if test="record.collectName != null">
        collect_name = #{record.collectName,jdbcType=VARCHAR},
      </if>
      <if test="record.collectPhone != null">
        collect_phone = #{record.collectPhone,jdbcType=VARCHAR},
      </if>
      <if test="record.weightPiece != null">
        weight_piece = #{record.weightPiece,jdbcType=DECIMAL},
      </if>
      <if test="record.pricePiece != null">
        price_piece = #{record.pricePiece,jdbcType=DECIMAL},
      </if>
      <if test="record.deliveryFee != null">
        delivery_fee = #{record.deliveryFee,jdbcType=DECIMAL},
      </if>
      <if test="record.totalFee != null">
        total_fee = #{record.totalFee,jdbcType=DECIMAL},
      </if>
      <if test="record.settlementWay != null">
        settlement_way = #{record.settlementWay,jdbcType=VARCHAR},
      </if>
      <if test="record.remark != null">
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update delivery_record
    set id = #{record.id,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      create_user_id = #{record.createUserId,jdbcType=INTEGER},
      delivery_classify = #{record.deliveryClassify,jdbcType=TINYINT},
      delivery_notice_no = #{record.deliveryNoticeNo,jdbcType=VARCHAR},
      contract_order_no = #{record.contractOrderNo,jdbcType=VARCHAR},
      delivery_time = #{record.deliveryTime,jdbcType=TIMESTAMP},
      operation_no = #{record.operationNo,jdbcType=VARCHAR},
      customer_no = #{record.customerNo,jdbcType=VARCHAR},
      product_count = #{record.productCount,jdbcType=INTEGER},
      packing_mode = #{record.packingMode,jdbcType=VARCHAR},
      piece_count = #{record.pieceCount,jdbcType=INTEGER},
      transport_company = #{record.transportCompany,jdbcType=VARCHAR},
      courier_no = #{record.courierNo,jdbcType=VARCHAR},
      collect_province = #{record.collectProvince,jdbcType=VARCHAR},
      collect_address = #{record.collectAddress,jdbcType=VARCHAR},
      collect_name = #{record.collectName,jdbcType=VARCHAR},
      collect_phone = #{record.collectPhone,jdbcType=VARCHAR},
      weight_piece = #{record.weightPiece,jdbcType=DECIMAL},
      price_piece = #{record.pricePiece,jdbcType=DECIMAL},
      delivery_fee = #{record.deliveryFee,jdbcType=DECIMAL},
      total_fee = #{record.totalFee,jdbcType=DECIMAL},
      settlement_way = #{record.settlementWay,jdbcType=VARCHAR},
      remark = #{record.remark,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.deepsoft.haolifa.model.domain.DeliveryRecord">
    update delivery_record
    <set>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUserId != null">
        create_user_id = #{createUserId,jdbcType=INTEGER},
      </if>
      <if test="deliveryClassify != null">
        delivery_classify = #{deliveryClassify,jdbcType=TINYINT},
      </if>
      <if test="deliveryNoticeNo != null">
        delivery_notice_no = #{deliveryNoticeNo,jdbcType=VARCHAR},
      </if>
      <if test="contractOrderNo != null">
        contract_order_no = #{contractOrderNo,jdbcType=VARCHAR},
      </if>
      <if test="deliveryTime != null">
        delivery_time = #{deliveryTime,jdbcType=TIMESTAMP},
      </if>
      <if test="operationNo != null">
        operation_no = #{operationNo,jdbcType=VARCHAR},
      </if>
      <if test="customerNo != null">
        customer_no = #{customerNo,jdbcType=VARCHAR},
      </if>
      <if test="productCount != null">
        product_count = #{productCount,jdbcType=INTEGER},
      </if>
      <if test="packingMode != null">
        packing_mode = #{packingMode,jdbcType=VARCHAR},
      </if>
      <if test="pieceCount != null">
        piece_count = #{pieceCount,jdbcType=INTEGER},
      </if>
      <if test="transportCompany != null">
        transport_company = #{transportCompany,jdbcType=VARCHAR},
      </if>
      <if test="courierNo != null">
        courier_no = #{courierNo,jdbcType=VARCHAR},
      </if>
      <if test="collectProvince != null">
        collect_province = #{collectProvince,jdbcType=VARCHAR},
      </if>
      <if test="collectAddress != null">
        collect_address = #{collectAddress,jdbcType=VARCHAR},
      </if>
      <if test="collectName != null">
        collect_name = #{collectName,jdbcType=VARCHAR},
      </if>
      <if test="collectPhone != null">
        collect_phone = #{collectPhone,jdbcType=VARCHAR},
      </if>
      <if test="weightPiece != null">
        weight_piece = #{weightPiece,jdbcType=DECIMAL},
      </if>
      <if test="pricePiece != null">
        price_piece = #{pricePiece,jdbcType=DECIMAL},
      </if>
      <if test="deliveryFee != null">
        delivery_fee = #{deliveryFee,jdbcType=DECIMAL},
      </if>
      <if test="totalFee != null">
        total_fee = #{totalFee,jdbcType=DECIMAL},
      </if>
      <if test="settlementWay != null">
        settlement_way = #{settlementWay,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.deepsoft.haolifa.model.domain.DeliveryRecord">
    update delivery_record
    set create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      create_user_id = #{createUserId,jdbcType=INTEGER},
      delivery_classify = #{deliveryClassify,jdbcType=TINYINT},
      delivery_notice_no = #{deliveryNoticeNo,jdbcType=VARCHAR},
      contract_order_no = #{contractOrderNo,jdbcType=VARCHAR},
      delivery_time = #{deliveryTime,jdbcType=TIMESTAMP},
      operation_no = #{operationNo,jdbcType=VARCHAR},
      customer_no = #{customerNo,jdbcType=VARCHAR},
      product_count = #{productCount,jdbcType=INTEGER},
      packing_mode = #{packingMode,jdbcType=VARCHAR},
      piece_count = #{pieceCount,jdbcType=INTEGER},
      transport_company = #{transportCompany,jdbcType=VARCHAR},
      courier_no = #{courierNo,jdbcType=VARCHAR},
      collect_province = #{collectProvince,jdbcType=VARCHAR},
      collect_address = #{collectAddress,jdbcType=VARCHAR},
      collect_name = #{collectName,jdbcType=VARCHAR},
      collect_phone = #{collectPhone,jdbcType=VARCHAR},
      weight_piece = #{weightPiece,jdbcType=DECIMAL},
      price_piece = #{pricePiece,jdbcType=DECIMAL},
      delivery_fee = #{deliveryFee,jdbcType=DECIMAL},
      total_fee = #{totalFee,jdbcType=DECIMAL},
      settlement_way = #{settlementWay,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>