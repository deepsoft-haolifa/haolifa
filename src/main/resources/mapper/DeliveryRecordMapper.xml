<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.deepsoft.haolifa.dao.repository.DeliveryRecordMapper">
  <resultMap id="BaseResultMap" type="com.deepsoft.haolifa.model.domain.DeliveryRecord">
    <constructor>
      <idArg column="id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="create_time" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="update_time" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="create_user_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="delivery_no" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="order_no" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="customer_no" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="delivery_time" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="collect_address" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="collect_name" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="collect_phone" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="product_no" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="product_name" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="product_model" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="lable" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="specifications" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="product_color" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="product_number" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="product_remark" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="transport_type" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="freight" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="is_delivery" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="remark" javaType="java.lang.String" jdbcType="VARCHAR" />
    </constructor>
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, create_time, update_time, create_user_id, delivery_no, order_no, customer_no, 
    delivery_time, collect_address, collect_name, collect_phone, product_no, product_name, 
    product_model, lable, specifications, product_color, product_number, product_remark, 
    transport_type, freight, is_delivery, remark
  </sql>
  <select id="selectByExample" parameterType="com.deepsoft.haolifa.model.domain.DeliveryRecordExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from delivery_record
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from delivery_record
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from delivery_record
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.deepsoft.haolifa.model.domain.DeliveryRecordExample">
    delete from delivery_record
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.deepsoft.haolifa.model.domain.DeliveryRecord">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into delivery_record (create_time, update_time, create_user_id, 
      delivery_no, order_no, customer_no, 
      delivery_time, collect_address, collect_name, 
      collect_phone, product_no, product_name, 
      product_model, lable, specifications, 
      product_color, product_number, product_remark, 
      transport_type, freight, is_delivery, 
      remark)
    values (#{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, #{createUserId,jdbcType=INTEGER}, 
      #{deliveryNo,jdbcType=VARCHAR}, #{orderNo,jdbcType=VARCHAR}, #{customerNo,jdbcType=VARCHAR}, 
      #{deliveryTime,jdbcType=VARCHAR}, #{collectAddress,jdbcType=VARCHAR}, #{collectName,jdbcType=VARCHAR}, 
      #{collectPhone,jdbcType=VARCHAR}, #{productNo,jdbcType=VARCHAR}, #{productName,jdbcType=VARCHAR}, 
      #{productModel,jdbcType=VARCHAR}, #{lable,jdbcType=VARCHAR}, #{specifications,jdbcType=VARCHAR}, 
      #{productColor,jdbcType=VARCHAR}, #{productNumber,jdbcType=INTEGER}, #{productRemark,jdbcType=VARCHAR}, 
      #{transportType,jdbcType=VARCHAR}, #{freight,jdbcType=VARCHAR}, #{isDelivery,jdbcType=VARCHAR}, 
      #{remark,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.deepsoft.haolifa.model.domain.DeliveryRecord">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into delivery_record
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="createUserId != null">
        create_user_id,
      </if>
      <if test="deliveryNo != null">
        delivery_no,
      </if>
      <if test="orderNo != null">
        order_no,
      </if>
      <if test="customerNo != null">
        customer_no,
      </if>
      <if test="deliveryTime != null">
        delivery_time,
      </if>
      <if test="collectAddress != null">
        collect_address,
      </if>
      <if test="collectName != null">
        collect_name,
      </if>
      <if test="collectPhone != null">
        collect_phone,
      </if>
      <if test="productNo != null">
        product_no,
      </if>
      <if test="productName != null">
        product_name,
      </if>
      <if test="productModel != null">
        product_model,
      </if>
      <if test="lable != null">
        lable,
      </if>
      <if test="specifications != null">
        specifications,
      </if>
      <if test="productColor != null">
        product_color,
      </if>
      <if test="productNumber != null">
        product_number,
      </if>
      <if test="productRemark != null">
        product_remark,
      </if>
      <if test="transportType != null">
        transport_type,
      </if>
      <if test="freight != null">
        freight,
      </if>
      <if test="isDelivery != null">
        is_delivery,
      </if>
      <if test="remark != null">
        remark,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUserId != null">
        #{createUserId,jdbcType=INTEGER},
      </if>
      <if test="deliveryNo != null">
        #{deliveryNo,jdbcType=VARCHAR},
      </if>
      <if test="orderNo != null">
        #{orderNo,jdbcType=VARCHAR},
      </if>
      <if test="customerNo != null">
        #{customerNo,jdbcType=VARCHAR},
      </if>
      <if test="deliveryTime != null">
        #{deliveryTime,jdbcType=VARCHAR},
      </if>
      <if test="collectAddress != null">
        #{collectAddress,jdbcType=VARCHAR},
      </if>
      <if test="collectName != null">
        #{collectName,jdbcType=VARCHAR},
      </if>
      <if test="collectPhone != null">
        #{collectPhone,jdbcType=VARCHAR},
      </if>
      <if test="productNo != null">
        #{productNo,jdbcType=VARCHAR},
      </if>
      <if test="productName != null">
        #{productName,jdbcType=VARCHAR},
      </if>
      <if test="productModel != null">
        #{productModel,jdbcType=VARCHAR},
      </if>
      <if test="lable != null">
        #{lable,jdbcType=VARCHAR},
      </if>
      <if test="specifications != null">
        #{specifications,jdbcType=VARCHAR},
      </if>
      <if test="productColor != null">
        #{productColor,jdbcType=VARCHAR},
      </if>
      <if test="productNumber != null">
        #{productNumber,jdbcType=INTEGER},
      </if>
      <if test="productRemark != null">
        #{productRemark,jdbcType=VARCHAR},
      </if>
      <if test="transportType != null">
        #{transportType,jdbcType=VARCHAR},
      </if>
      <if test="freight != null">
        #{freight,jdbcType=VARCHAR},
      </if>
      <if test="isDelivery != null">
        #{isDelivery,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.deepsoft.haolifa.model.domain.DeliveryRecordExample" resultType="java.lang.Long">
    select count(*) from delivery_record
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update delivery_record
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createUserId != null">
        create_user_id = #{record.createUserId,jdbcType=INTEGER},
      </if>
      <if test="record.deliveryNo != null">
        delivery_no = #{record.deliveryNo,jdbcType=VARCHAR},
      </if>
      <if test="record.orderNo != null">
        order_no = #{record.orderNo,jdbcType=VARCHAR},
      </if>
      <if test="record.customerNo != null">
        customer_no = #{record.customerNo,jdbcType=VARCHAR},
      </if>
      <if test="record.deliveryTime != null">
        delivery_time = #{record.deliveryTime,jdbcType=VARCHAR},
      </if>
      <if test="record.collectAddress != null">
        collect_address = #{record.collectAddress,jdbcType=VARCHAR},
      </if>
      <if test="record.collectName != null">
        collect_name = #{record.collectName,jdbcType=VARCHAR},
      </if>
      <if test="record.collectPhone != null">
        collect_phone = #{record.collectPhone,jdbcType=VARCHAR},
      </if>
      <if test="record.productNo != null">
        product_no = #{record.productNo,jdbcType=VARCHAR},
      </if>
      <if test="record.productName != null">
        product_name = #{record.productName,jdbcType=VARCHAR},
      </if>
      <if test="record.productModel != null">
        product_model = #{record.productModel,jdbcType=VARCHAR},
      </if>
      <if test="record.lable != null">
        lable = #{record.lable,jdbcType=VARCHAR},
      </if>
      <if test="record.specifications != null">
        specifications = #{record.specifications,jdbcType=VARCHAR},
      </if>
      <if test="record.productColor != null">
        product_color = #{record.productColor,jdbcType=VARCHAR},
      </if>
      <if test="record.productNumber != null">
        product_number = #{record.productNumber,jdbcType=INTEGER},
      </if>
      <if test="record.productRemark != null">
        product_remark = #{record.productRemark,jdbcType=VARCHAR},
      </if>
      <if test="record.transportType != null">
        transport_type = #{record.transportType,jdbcType=VARCHAR},
      </if>
      <if test="record.freight != null">
        freight = #{record.freight,jdbcType=VARCHAR},
      </if>
      <if test="record.isDelivery != null">
        is_delivery = #{record.isDelivery,jdbcType=VARCHAR},
      </if>
      <if test="record.remark != null">
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update delivery_record
    set id = #{record.id,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      create_user_id = #{record.createUserId,jdbcType=INTEGER},
      delivery_no = #{record.deliveryNo,jdbcType=VARCHAR},
      order_no = #{record.orderNo,jdbcType=VARCHAR},
      customer_no = #{record.customerNo,jdbcType=VARCHAR},
      delivery_time = #{record.deliveryTime,jdbcType=VARCHAR},
      collect_address = #{record.collectAddress,jdbcType=VARCHAR},
      collect_name = #{record.collectName,jdbcType=VARCHAR},
      collect_phone = #{record.collectPhone,jdbcType=VARCHAR},
      product_no = #{record.productNo,jdbcType=VARCHAR},
      product_name = #{record.productName,jdbcType=VARCHAR},
      product_model = #{record.productModel,jdbcType=VARCHAR},
      lable = #{record.lable,jdbcType=VARCHAR},
      specifications = #{record.specifications,jdbcType=VARCHAR},
      product_color = #{record.productColor,jdbcType=VARCHAR},
      product_number = #{record.productNumber,jdbcType=INTEGER},
      product_remark = #{record.productRemark,jdbcType=VARCHAR},
      transport_type = #{record.transportType,jdbcType=VARCHAR},
      freight = #{record.freight,jdbcType=VARCHAR},
      is_delivery = #{record.isDelivery,jdbcType=VARCHAR},
      remark = #{record.remark,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.deepsoft.haolifa.model.domain.DeliveryRecord">
    update delivery_record
    <set>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUserId != null">
        create_user_id = #{createUserId,jdbcType=INTEGER},
      </if>
      <if test="deliveryNo != null">
        delivery_no = #{deliveryNo,jdbcType=VARCHAR},
      </if>
      <if test="orderNo != null">
        order_no = #{orderNo,jdbcType=VARCHAR},
      </if>
      <if test="customerNo != null">
        customer_no = #{customerNo,jdbcType=VARCHAR},
      </if>
      <if test="deliveryTime != null">
        delivery_time = #{deliveryTime,jdbcType=VARCHAR},
      </if>
      <if test="collectAddress != null">
        collect_address = #{collectAddress,jdbcType=VARCHAR},
      </if>
      <if test="collectName != null">
        collect_name = #{collectName,jdbcType=VARCHAR},
      </if>
      <if test="collectPhone != null">
        collect_phone = #{collectPhone,jdbcType=VARCHAR},
      </if>
      <if test="productNo != null">
        product_no = #{productNo,jdbcType=VARCHAR},
      </if>
      <if test="productName != null">
        product_name = #{productName,jdbcType=VARCHAR},
      </if>
      <if test="productModel != null">
        product_model = #{productModel,jdbcType=VARCHAR},
      </if>
      <if test="lable != null">
        lable = #{lable,jdbcType=VARCHAR},
      </if>
      <if test="specifications != null">
        specifications = #{specifications,jdbcType=VARCHAR},
      </if>
      <if test="productColor != null">
        product_color = #{productColor,jdbcType=VARCHAR},
      </if>
      <if test="productNumber != null">
        product_number = #{productNumber,jdbcType=INTEGER},
      </if>
      <if test="productRemark != null">
        product_remark = #{productRemark,jdbcType=VARCHAR},
      </if>
      <if test="transportType != null">
        transport_type = #{transportType,jdbcType=VARCHAR},
      </if>
      <if test="freight != null">
        freight = #{freight,jdbcType=VARCHAR},
      </if>
      <if test="isDelivery != null">
        is_delivery = #{isDelivery,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.deepsoft.haolifa.model.domain.DeliveryRecord">
    update delivery_record
    set create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      create_user_id = #{createUserId,jdbcType=INTEGER},
      delivery_no = #{deliveryNo,jdbcType=VARCHAR},
      order_no = #{orderNo,jdbcType=VARCHAR},
      customer_no = #{customerNo,jdbcType=VARCHAR},
      delivery_time = #{deliveryTime,jdbcType=VARCHAR},
      collect_address = #{collectAddress,jdbcType=VARCHAR},
      collect_name = #{collectName,jdbcType=VARCHAR},
      collect_phone = #{collectPhone,jdbcType=VARCHAR},
      product_no = #{productNo,jdbcType=VARCHAR},
      product_name = #{productName,jdbcType=VARCHAR},
      product_model = #{productModel,jdbcType=VARCHAR},
      lable = #{lable,jdbcType=VARCHAR},
      specifications = #{specifications,jdbcType=VARCHAR},
      product_color = #{productColor,jdbcType=VARCHAR},
      product_number = #{productNumber,jdbcType=INTEGER},
      product_remark = #{productRemark,jdbcType=VARCHAR},
      transport_type = #{transportType,jdbcType=VARCHAR},
      freight = #{freight,jdbcType=VARCHAR},
      is_delivery = #{isDelivery,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>