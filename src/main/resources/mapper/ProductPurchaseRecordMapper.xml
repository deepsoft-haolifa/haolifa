<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.deepsoft.haolifa.dao.repository.ProductPurchaseRecordMapper">
  <resultMap id="BaseResultMap" type="com.deepsoft.haolifa.model.domain.ProductPurchaseRecord">
    <constructor>
      <idArg column="id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="purchase_plan_no" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="product_order_no" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="material_graph_no" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="apply_buy_no" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="purchase_order_no" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="stock_status" javaType="java.lang.Byte" jdbcType="TINYINT" />
      <arg column="purchase_order_status" javaType="java.lang.Byte" jdbcType="TINYINT" />
    </constructor>
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, purchase_plan_no, product_order_no, material_graph_no, apply_buy_no, purchase_order_no, 
    stock_status, purchase_order_status
  </sql>
  <select id="selectByExample" parameterType="com.deepsoft.haolifa.model.domain.ProductPurchaseRecordExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from product_purchase_record
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from product_purchase_record
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from product_purchase_record
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.deepsoft.haolifa.model.domain.ProductPurchaseRecordExample">
    delete from product_purchase_record
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.deepsoft.haolifa.model.domain.ProductPurchaseRecord">
    insert into product_purchase_record (id, purchase_plan_no, product_order_no, 
      material_graph_no, apply_buy_no, purchase_order_no, 
      stock_status, purchase_order_status)
    values (#{id,jdbcType=INTEGER}, #{purchasePlanNo,jdbcType=VARCHAR}, #{productOrderNo,jdbcType=VARCHAR}, 
      #{materialGraphNo,jdbcType=VARCHAR}, #{applyBuyNo,jdbcType=VARCHAR}, #{purchaseOrderNo,jdbcType=VARCHAR}, 
      #{stockStatus,jdbcType=TINYINT}, #{purchaseOrderStatus,jdbcType=TINYINT})
  </insert>
  <insert id="insertSelective" parameterType="com.deepsoft.haolifa.model.domain.ProductPurchaseRecord">
    insert into product_purchase_record
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="purchasePlanNo != null">
        purchase_plan_no,
      </if>
      <if test="productOrderNo != null">
        product_order_no,
      </if>
      <if test="materialGraphNo != null">
        material_graph_no,
      </if>
      <if test="applyBuyNo != null">
        apply_buy_no,
      </if>
      <if test="purchaseOrderNo != null">
        purchase_order_no,
      </if>
      <if test="stockStatus != null">
        stock_status,
      </if>
      <if test="purchaseOrderStatus != null">
        purchase_order_status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="purchasePlanNo != null">
        #{purchasePlanNo,jdbcType=VARCHAR},
      </if>
      <if test="productOrderNo != null">
        #{productOrderNo,jdbcType=VARCHAR},
      </if>
      <if test="materialGraphNo != null">
        #{materialGraphNo,jdbcType=VARCHAR},
      </if>
      <if test="applyBuyNo != null">
        #{applyBuyNo,jdbcType=VARCHAR},
      </if>
      <if test="purchaseOrderNo != null">
        #{purchaseOrderNo,jdbcType=VARCHAR},
      </if>
      <if test="stockStatus != null">
        #{stockStatus,jdbcType=TINYINT},
      </if>
      <if test="purchaseOrderStatus != null">
        #{purchaseOrderStatus,jdbcType=TINYINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.deepsoft.haolifa.model.domain.ProductPurchaseRecordExample" resultType="java.lang.Long">
    select count(*) from product_purchase_record
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update product_purchase_record
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.purchasePlanNo != null">
        purchase_plan_no = #{record.purchasePlanNo,jdbcType=VARCHAR},
      </if>
      <if test="record.productOrderNo != null">
        product_order_no = #{record.productOrderNo,jdbcType=VARCHAR},
      </if>
      <if test="record.materialGraphNo != null">
        material_graph_no = #{record.materialGraphNo,jdbcType=VARCHAR},
      </if>
      <if test="record.applyBuyNo != null">
        apply_buy_no = #{record.applyBuyNo,jdbcType=VARCHAR},
      </if>
      <if test="record.purchaseOrderNo != null">
        purchase_order_no = #{record.purchaseOrderNo,jdbcType=VARCHAR},
      </if>
      <if test="record.stockStatus != null">
        stock_status = #{record.stockStatus,jdbcType=TINYINT},
      </if>
      <if test="record.purchaseOrderStatus != null">
        purchase_order_status = #{record.purchaseOrderStatus,jdbcType=TINYINT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update product_purchase_record
    set id = #{record.id,jdbcType=INTEGER},
      purchase_plan_no = #{record.purchasePlanNo,jdbcType=VARCHAR},
      product_order_no = #{record.productOrderNo,jdbcType=VARCHAR},
      material_graph_no = #{record.materialGraphNo,jdbcType=VARCHAR},
      apply_buy_no = #{record.applyBuyNo,jdbcType=VARCHAR},
      purchase_order_no = #{record.purchaseOrderNo,jdbcType=VARCHAR},
      stock_status = #{record.stockStatus,jdbcType=TINYINT},
      purchase_order_status = #{record.purchaseOrderStatus,jdbcType=TINYINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.deepsoft.haolifa.model.domain.ProductPurchaseRecord">
    update product_purchase_record
    <set>
      <if test="purchasePlanNo != null">
        purchase_plan_no = #{purchasePlanNo,jdbcType=VARCHAR},
      </if>
      <if test="productOrderNo != null">
        product_order_no = #{productOrderNo,jdbcType=VARCHAR},
      </if>
      <if test="materialGraphNo != null">
        material_graph_no = #{materialGraphNo,jdbcType=VARCHAR},
      </if>
      <if test="applyBuyNo != null">
        apply_buy_no = #{applyBuyNo,jdbcType=VARCHAR},
      </if>
      <if test="purchaseOrderNo != null">
        purchase_order_no = #{purchaseOrderNo,jdbcType=VARCHAR},
      </if>
      <if test="stockStatus != null">
        stock_status = #{stockStatus,jdbcType=TINYINT},
      </if>
      <if test="purchaseOrderStatus != null">
        purchase_order_status = #{purchaseOrderStatus,jdbcType=TINYINT},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.deepsoft.haolifa.model.domain.ProductPurchaseRecord">
    update product_purchase_record
    set purchase_plan_no = #{purchasePlanNo,jdbcType=VARCHAR},
      product_order_no = #{productOrderNo,jdbcType=VARCHAR},
      material_graph_no = #{materialGraphNo,jdbcType=VARCHAR},
      apply_buy_no = #{applyBuyNo,jdbcType=VARCHAR},
      purchase_order_no = #{purchaseOrderNo,jdbcType=VARCHAR},
      stock_status = #{stockStatus,jdbcType=TINYINT},
      purchase_order_status = #{purchaseOrderStatus,jdbcType=TINYINT}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>