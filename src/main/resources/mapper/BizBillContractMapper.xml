<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.deepsoft.haolifa.dao.repository.BizBillContractMapper">
  <resultMap id="BaseResultMap" type="com.deepsoft.haolifa.model.domain.BizBillContract">
    <constructor>
      <idArg column="id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="bill_id" javaType="java.lang.Long" jdbcType="BIGINT" />
      <arg column="bill_type" javaType="java.lang.Byte" jdbcType="TINYINT" />
      <arg column="order_id" javaType="java.lang.Long" jdbcType="BIGINT" />
      <arg column="order_no" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="amount" javaType="java.math.BigDecimal" jdbcType="DECIMAL" />
      <arg column="book_keeper" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="audit_status" javaType="java.lang.Byte" jdbcType="TINYINT" />
      <arg column="remark" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="create_user" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="create_time" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="update_user" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="update_time" javaType="java.util.Date" jdbcType="TIMESTAMP" />
    </constructor>
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, bill_id, bill_type, order_id, order_no, amount, book_keeper, audit_status, remark,
    create_user, create_time, update_user, update_time
  </sql>
  <select id="selectByExample" parameterType="com.deepsoft.haolifa.model.domain.BizBillContractExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from biz_bill_contract
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from biz_bill_contract
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from biz_bill_contract
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.deepsoft.haolifa.model.domain.BizBillContractExample">
    delete from biz_bill_contract
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.deepsoft.haolifa.model.domain.BizBillContract">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into biz_bill_contract (bill_id, bill_type, order_id,
      order_no, amount, book_keeper,
      audit_status, remark, create_user,
      create_time, update_user, update_time
      )
    values (#{billId,jdbcType=BIGINT}, #{billType,jdbcType=TINYINT}, #{orderId,jdbcType=BIGINT},
      #{orderNo,jdbcType=VARCHAR}, #{amount,jdbcType=DECIMAL}, #{bookKeeper,jdbcType=VARCHAR},
      #{auditStatus,jdbcType=TINYINT}, #{remark,jdbcType=VARCHAR}, #{createUser,jdbcType=INTEGER},
      #{createTime,jdbcType=TIMESTAMP}, #{updateUser,jdbcType=INTEGER}, #{updateTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.deepsoft.haolifa.model.domain.BizBillContract">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into biz_bill_contract
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="billId != null">
        bill_id,
      </if>
      <if test="billType != null">
        bill_type,
      </if>
      <if test="orderId != null">
        order_id,
      </if>
      <if test="orderNo != null">
        order_no,
      </if>
      <if test="amount != null">
        amount,
      </if>
      <if test="bookKeeper != null">
        book_keeper,
      </if>
      <if test="auditStatus != null">
        audit_status,
      </if>
      <if test="remark != null">
        remark,
      </if>
      <if test="createUser != null">
        create_user,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateUser != null">
        update_user,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="billId != null">
        #{billId,jdbcType=BIGINT},
      </if>
      <if test="billType != null">
        #{billType,jdbcType=TINYINT},
      </if>
      <if test="orderId != null">
        #{orderId,jdbcType=BIGINT},
      </if>
      <if test="orderNo != null">
        #{orderNo,jdbcType=VARCHAR},
      </if>
      <if test="amount != null">
        #{amount,jdbcType=DECIMAL},
      </if>
      <if test="bookKeeper != null">
        #{bookKeeper,jdbcType=VARCHAR},
      </if>
      <if test="auditStatus != null">
        #{auditStatus,jdbcType=TINYINT},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="createUser != null">
        #{createUser,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null">
        #{updateUser,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.deepsoft.haolifa.model.domain.BizBillContractExample" resultType="java.lang.Integer">
    select count(*) from biz_bill_contract
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update biz_bill_contract
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.billId != null">
        bill_id = #{record.billId,jdbcType=BIGINT},
      </if>
      <if test="record.billType != null">
        bill_type = #{record.billType,jdbcType=TINYINT},
      </if>
      <if test="record.orderId != null">
        order_id = #{record.orderId,jdbcType=BIGINT},
      </if>
      <if test="record.orderNo != null">
        order_no = #{record.orderNo,jdbcType=VARCHAR},
      </if>
      <if test="record.amount != null">
        amount = #{record.amount,jdbcType=DECIMAL},
      </if>
      <if test="record.bookKeeper != null">
        book_keeper = #{record.bookKeeper,jdbcType=VARCHAR},
      </if>
      <if test="record.auditStatus != null">
        audit_status = #{record.auditStatus,jdbcType=TINYINT},
      </if>
      <if test="record.remark != null">
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.createUser != null">
        create_user = #{record.createUser,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateUser != null">
        update_user = #{record.updateUser,jdbcType=INTEGER},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update biz_bill_contract
    set id = #{record.id,jdbcType=INTEGER},
      bill_id = #{record.billId,jdbcType=BIGINT},
      bill_type = #{record.billType,jdbcType=TINYINT},
      order_id = #{record.orderId,jdbcType=BIGINT},
      order_no = #{record.orderNo,jdbcType=VARCHAR},
      amount = #{record.amount,jdbcType=DECIMAL},
      book_keeper = #{record.bookKeeper,jdbcType=VARCHAR},
      audit_status = #{record.auditStatus,jdbcType=TINYINT},
      remark = #{record.remark,jdbcType=VARCHAR},
      create_user = #{record.createUser,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_user = #{record.updateUser,jdbcType=INTEGER},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.deepsoft.haolifa.model.domain.BizBillContract">
    update biz_bill_contract
    <set>
      <if test="billId != null">
        bill_id = #{billId,jdbcType=BIGINT},
      </if>
      <if test="billType != null">
        bill_type = #{billType,jdbcType=TINYINT},
      </if>
      <if test="orderId != null">
        order_id = #{orderId,jdbcType=BIGINT},
      </if>
      <if test="orderNo != null">
        order_no = #{orderNo,jdbcType=VARCHAR},
      </if>
      <if test="amount != null">
        amount = #{amount,jdbcType=DECIMAL},
      </if>
      <if test="bookKeeper != null">
        book_keeper = #{bookKeeper,jdbcType=VARCHAR},
      </if>
      <if test="auditStatus != null">
        audit_status = #{auditStatus,jdbcType=TINYINT},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="createUser != null">
        create_user = #{createUser,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null">
        update_user = #{updateUser,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.deepsoft.haolifa.model.domain.BizBillContract">
    update biz_bill_contract
    set bill_id = #{billId,jdbcType=BIGINT},
      bill_type = #{billType,jdbcType=TINYINT},
      order_id = #{orderId,jdbcType=BIGINT},
      order_no = #{orderNo,jdbcType=VARCHAR},
      amount = #{amount,jdbcType=DECIMAL},
      book_keeper = #{bookKeeper,jdbcType=VARCHAR},
      audit_status = #{auditStatus,jdbcType=TINYINT},
      remark = #{remark,jdbcType=VARCHAR},
      create_user = #{createUser,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_user = #{updateUser,jdbcType=INTEGER},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>

</mapper>
