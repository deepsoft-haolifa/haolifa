<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.deepsoft.haolifa.dao.repository.FlowStepMapper">
  <resultMap id="BaseResultMap" type="com.deepsoft.haolifa.model.domain.FlowStep">
    <constructor>
      <idArg column="id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="create_time" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="update_time" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="create_user" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="update_user" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="flow_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="step_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="next_step_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="pre_step_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="goto_step_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="step_order" javaType="java.lang.Integer" jdbcType="INTEGER" />
    </constructor>
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, create_time, update_time, create_user, update_user, flow_id, step_id, next_step_id, 
    pre_step_id, goto_step_id, step_order
  </sql>
  <select id="selectByExample" parameterType="com.deepsoft.haolifa.model.domain.FlowStepExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from flow_step
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from flow_step
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from flow_step
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.deepsoft.haolifa.model.domain.FlowStepExample">
    delete from flow_step
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.deepsoft.haolifa.model.domain.FlowStep">
    insert into flow_step (id, create_time, update_time, 
      create_user, update_user, flow_id, 
      step_id, next_step_id, pre_step_id, 
      goto_step_id, step_order)
    values (#{id,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{createUser,jdbcType=INTEGER}, #{updateUser,jdbcType=INTEGER}, #{flowId,jdbcType=INTEGER}, 
      #{stepId,jdbcType=INTEGER}, #{nextStepId,jdbcType=INTEGER}, #{preStepId,jdbcType=INTEGER}, 
      #{gotoStepId,jdbcType=INTEGER}, #{stepOrder,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.deepsoft.haolifa.model.domain.FlowStep">
    insert into flow_step
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="createUser != null">
        create_user,
      </if>
      <if test="updateUser != null">
        update_user,
      </if>
      <if test="flowId != null">
        flow_id,
      </if>
      <if test="stepId != null">
        step_id,
      </if>
      <if test="nextStepId != null">
        next_step_id,
      </if>
      <if test="preStepId != null">
        pre_step_id,
      </if>
      <if test="gotoStepId != null">
        goto_step_id,
      </if>
      <if test="stepOrder != null">
        step_order,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUser != null">
        #{createUser,jdbcType=INTEGER},
      </if>
      <if test="updateUser != null">
        #{updateUser,jdbcType=INTEGER},
      </if>
      <if test="flowId != null">
        #{flowId,jdbcType=INTEGER},
      </if>
      <if test="stepId != null">
        #{stepId,jdbcType=INTEGER},
      </if>
      <if test="nextStepId != null">
        #{nextStepId,jdbcType=INTEGER},
      </if>
      <if test="preStepId != null">
        #{preStepId,jdbcType=INTEGER},
      </if>
      <if test="gotoStepId != null">
        #{gotoStepId,jdbcType=INTEGER},
      </if>
      <if test="stepOrder != null">
        #{stepOrder,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.deepsoft.haolifa.model.domain.FlowStepExample" resultType="java.lang.Long">
    select count(*) from flow_step
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update flow_step
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createUser != null">
        create_user = #{record.createUser,jdbcType=INTEGER},
      </if>
      <if test="record.updateUser != null">
        update_user = #{record.updateUser,jdbcType=INTEGER},
      </if>
      <if test="record.flowId != null">
        flow_id = #{record.flowId,jdbcType=INTEGER},
      </if>
      <if test="record.stepId != null">
        step_id = #{record.stepId,jdbcType=INTEGER},
      </if>
      <if test="record.nextStepId != null">
        next_step_id = #{record.nextStepId,jdbcType=INTEGER},
      </if>
      <if test="record.preStepId != null">
        pre_step_id = #{record.preStepId,jdbcType=INTEGER},
      </if>
      <if test="record.gotoStepId != null">
        goto_step_id = #{record.gotoStepId,jdbcType=INTEGER},
      </if>
      <if test="record.stepOrder != null">
        step_order = #{record.stepOrder,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update flow_step
    set id = #{record.id,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      create_user = #{record.createUser,jdbcType=INTEGER},
      update_user = #{record.updateUser,jdbcType=INTEGER},
      flow_id = #{record.flowId,jdbcType=INTEGER},
      step_id = #{record.stepId,jdbcType=INTEGER},
      next_step_id = #{record.nextStepId,jdbcType=INTEGER},
      pre_step_id = #{record.preStepId,jdbcType=INTEGER},
      goto_step_id = #{record.gotoStepId,jdbcType=INTEGER},
      step_order = #{record.stepOrder,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.deepsoft.haolifa.model.domain.FlowStep">
    update flow_step
    <set>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUser != null">
        create_user = #{createUser,jdbcType=INTEGER},
      </if>
      <if test="updateUser != null">
        update_user = #{updateUser,jdbcType=INTEGER},
      </if>
      <if test="flowId != null">
        flow_id = #{flowId,jdbcType=INTEGER},
      </if>
      <if test="stepId != null">
        step_id = #{stepId,jdbcType=INTEGER},
      </if>
      <if test="nextStepId != null">
        next_step_id = #{nextStepId,jdbcType=INTEGER},
      </if>
      <if test="preStepId != null">
        pre_step_id = #{preStepId,jdbcType=INTEGER},
      </if>
      <if test="gotoStepId != null">
        goto_step_id = #{gotoStepId,jdbcType=INTEGER},
      </if>
      <if test="stepOrder != null">
        step_order = #{stepOrder,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.deepsoft.haolifa.model.domain.FlowStep">
    update flow_step
    set create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      create_user = #{createUser,jdbcType=INTEGER},
      update_user = #{updateUser,jdbcType=INTEGER},
      flow_id = #{flowId,jdbcType=INTEGER},
      step_id = #{stepId,jdbcType=INTEGER},
      next_step_id = #{nextStepId,jdbcType=INTEGER},
      pre_step_id = #{preStepId,jdbcType=INTEGER},
      goto_step_id = #{gotoStepId,jdbcType=INTEGER},
      step_order = #{stepOrder,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>