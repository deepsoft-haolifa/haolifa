<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.deepsoft.haolifa.dao.repository.FlowStepMapper">
  <resultMap id="BaseResultMap" type="com.deepsoft.haolifa.model.domain.FlowStep">
    <constructor>
      <idArg column="id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="create_time" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="update_time" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="create_user_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="flow_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="step_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="user_id" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="role_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="prev_step_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="condition_true" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="condition_false" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="form_show_step_id" javaType="java.lang.String" jdbcType="VARCHAR" />
    </constructor>
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, create_time, update_time, create_user_id, flow_id, step_id, user_id, role_id, 
    prev_step_id, condition_true, condition_false, form_show_step_id
  </sql>
  <select id="selectByExample" parameterType="com.deepsoft.haolifa.model.domain.FlowStepExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from flow_step
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from flow_step
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from flow_step
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.deepsoft.haolifa.model.domain.FlowStepExample">
    delete from flow_step
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.deepsoft.haolifa.model.domain.FlowStep">
    insert into flow_step (id, create_time, update_time, 
      create_user_id, flow_id, step_id, 
      user_id, role_id, prev_step_id, 
      condition_true, condition_false, form_show_step_id
      )
    values (#{id,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{createUserId,jdbcType=INTEGER}, #{flowId,jdbcType=INTEGER}, #{stepId,jdbcType=INTEGER}, 
      #{userId,jdbcType=VARCHAR}, #{roleId,jdbcType=INTEGER}, #{prevStepId,jdbcType=INTEGER}, 
      #{conditionTrue,jdbcType=INTEGER}, #{conditionFalse,jdbcType=INTEGER}, #{formShowStepId,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.deepsoft.haolifa.model.domain.FlowStep">
    insert into flow_step
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="createUserId != null">
        create_user_id,
      </if>
      <if test="flowId != null">
        flow_id,
      </if>
      <if test="stepId != null">
        step_id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="roleId != null">
        role_id,
      </if>
      <if test="prevStepId != null">
        prev_step_id,
      </if>
      <if test="conditionTrue != null">
        condition_true,
      </if>
      <if test="conditionFalse != null">
        condition_false,
      </if>
      <if test="formShowStepId != null">
        form_show_step_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUserId != null">
        #{createUserId,jdbcType=INTEGER},
      </if>
      <if test="flowId != null">
        #{flowId,jdbcType=INTEGER},
      </if>
      <if test="stepId != null">
        #{stepId,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="roleId != null">
        #{roleId,jdbcType=INTEGER},
      </if>
      <if test="prevStepId != null">
        #{prevStepId,jdbcType=INTEGER},
      </if>
      <if test="conditionTrue != null">
        #{conditionTrue,jdbcType=INTEGER},
      </if>
      <if test="conditionFalse != null">
        #{conditionFalse,jdbcType=INTEGER},
      </if>
      <if test="formShowStepId != null">
        #{formShowStepId,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.deepsoft.haolifa.model.domain.FlowStepExample" resultType="java.lang.Long">
    select count(*) from flow_step
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update flow_step
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createUserId != null">
        create_user_id = #{record.createUserId,jdbcType=INTEGER},
      </if>
      <if test="record.flowId != null">
        flow_id = #{record.flowId,jdbcType=INTEGER},
      </if>
      <if test="record.stepId != null">
        step_id = #{record.stepId,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=VARCHAR},
      </if>
      <if test="record.roleId != null">
        role_id = #{record.roleId,jdbcType=INTEGER},
      </if>
      <if test="record.prevStepId != null">
        prev_step_id = #{record.prevStepId,jdbcType=INTEGER},
      </if>
      <if test="record.conditionTrue != null">
        condition_true = #{record.conditionTrue,jdbcType=INTEGER},
      </if>
      <if test="record.conditionFalse != null">
        condition_false = #{record.conditionFalse,jdbcType=INTEGER},
      </if>
      <if test="record.formShowStepId != null">
        form_show_step_id = #{record.formShowStepId,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update flow_step
    set id = #{record.id,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      create_user_id = #{record.createUserId,jdbcType=INTEGER},
      flow_id = #{record.flowId,jdbcType=INTEGER},
      step_id = #{record.stepId,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=VARCHAR},
      role_id = #{record.roleId,jdbcType=INTEGER},
      prev_step_id = #{record.prevStepId,jdbcType=INTEGER},
      condition_true = #{record.conditionTrue,jdbcType=INTEGER},
      condition_false = #{record.conditionFalse,jdbcType=INTEGER},
      form_show_step_id = #{record.formShowStepId,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.deepsoft.haolifa.model.domain.FlowStep">
    update flow_step
    <set>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUserId != null">
        create_user_id = #{createUserId,jdbcType=INTEGER},
      </if>
      <if test="flowId != null">
        flow_id = #{flowId,jdbcType=INTEGER},
      </if>
      <if test="stepId != null">
        step_id = #{stepId,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=VARCHAR},
      </if>
      <if test="roleId != null">
        role_id = #{roleId,jdbcType=INTEGER},
      </if>
      <if test="prevStepId != null">
        prev_step_id = #{prevStepId,jdbcType=INTEGER},
      </if>
      <if test="conditionTrue != null">
        condition_true = #{conditionTrue,jdbcType=INTEGER},
      </if>
      <if test="conditionFalse != null">
        condition_false = #{conditionFalse,jdbcType=INTEGER},
      </if>
      <if test="formShowStepId != null">
        form_show_step_id = #{formShowStepId,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.deepsoft.haolifa.model.domain.FlowStep">
    update flow_step
    set create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      create_user_id = #{createUserId,jdbcType=INTEGER},
      flow_id = #{flowId,jdbcType=INTEGER},
      step_id = #{stepId,jdbcType=INTEGER},
      user_id = #{userId,jdbcType=VARCHAR},
      role_id = #{roleId,jdbcType=INTEGER},
      prev_step_id = #{prevStepId,jdbcType=INTEGER},
      condition_true = #{conditionTrue,jdbcType=INTEGER},
      condition_false = #{conditionFalse,jdbcType=INTEGER},
      form_show_step_id = #{formShowStepId,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>