<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.deepsoft.haolifa.dao.repository.FlowInstanceMapper">
  <resultMap id="BaseResultMap" type="com.deepsoft.haolifa.model.domain.FlowInstance">
    <constructor>
      <idArg column="id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="summary" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="form_no" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="flow_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="current_step_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="next_step_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="prev_step_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="user_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="role_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="is_over" javaType="java.lang.Byte" jdbcType="TINYINT" />
      <arg column="create_user_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="create_time" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="update_time" javaType="java.util.Date" jdbcType="TIMESTAMP" />
    </constructor>
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, summary, form_no, flow_id, current_step_id, next_step_id, prev_step_id, user_id, 
    role_id, is_over, create_user_id, create_time, update_time
  </sql>
  <select id="selectByExample" parameterType="com.deepsoft.haolifa.model.domain.FlowInstanceExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from flow_instance
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from flow_instance
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from flow_instance
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.deepsoft.haolifa.model.domain.FlowInstanceExample">
    delete from flow_instance
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.deepsoft.haolifa.model.domain.FlowInstance">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into flow_instance (summary, form_no, flow_id, 
      current_step_id, next_step_id, prev_step_id, 
      user_id, role_id, is_over, 
      create_user_id, create_time, update_time
      )
    values (#{summary,jdbcType=VARCHAR}, #{formNo,jdbcType=VARCHAR}, #{flowId,jdbcType=INTEGER}, 
      #{currentStepId,jdbcType=INTEGER}, #{nextStepId,jdbcType=INTEGER}, #{prevStepId,jdbcType=INTEGER}, 
      #{userId,jdbcType=INTEGER}, #{roleId,jdbcType=INTEGER}, #{isOver,jdbcType=TINYINT}, 
      #{createUserId,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.deepsoft.haolifa.model.domain.FlowInstance">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into flow_instance
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="summary != null">
        summary,
      </if>
      <if test="formNo != null">
        form_no,
      </if>
      <if test="flowId != null">
        flow_id,
      </if>
      <if test="currentStepId != null">
        current_step_id,
      </if>
      <if test="nextStepId != null">
        next_step_id,
      </if>
      <if test="prevStepId != null">
        prev_step_id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="roleId != null">
        role_id,
      </if>
      <if test="isOver != null">
        is_over,
      </if>
      <if test="createUserId != null">
        create_user_id,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="summary != null">
        #{summary,jdbcType=VARCHAR},
      </if>
      <if test="formNo != null">
        #{formNo,jdbcType=VARCHAR},
      </if>
      <if test="flowId != null">
        #{flowId,jdbcType=INTEGER},
      </if>
      <if test="currentStepId != null">
        #{currentStepId,jdbcType=INTEGER},
      </if>
      <if test="nextStepId != null">
        #{nextStepId,jdbcType=INTEGER},
      </if>
      <if test="prevStepId != null">
        #{prevStepId,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="roleId != null">
        #{roleId,jdbcType=INTEGER},
      </if>
      <if test="isOver != null">
        #{isOver,jdbcType=TINYINT},
      </if>
      <if test="createUserId != null">
        #{createUserId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.deepsoft.haolifa.model.domain.FlowInstanceExample" resultType="java.lang.Long">
    select count(*) from flow_instance
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update flow_instance
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.summary != null">
        summary = #{record.summary,jdbcType=VARCHAR},
      </if>
      <if test="record.formNo != null">
        form_no = #{record.formNo,jdbcType=VARCHAR},
      </if>
      <if test="record.flowId != null">
        flow_id = #{record.flowId,jdbcType=INTEGER},
      </if>
      <if test="record.currentStepId != null">
        current_step_id = #{record.currentStepId,jdbcType=INTEGER},
      </if>
      <if test="record.nextStepId != null">
        next_step_id = #{record.nextStepId,jdbcType=INTEGER},
      </if>
      <if test="record.prevStepId != null">
        prev_step_id = #{record.prevStepId,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.roleId != null">
        role_id = #{record.roleId,jdbcType=INTEGER},
      </if>
      <if test="record.isOver != null">
        is_over = #{record.isOver,jdbcType=TINYINT},
      </if>
      <if test="record.createUserId != null">
        create_user_id = #{record.createUserId,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update flow_instance
    set id = #{record.id,jdbcType=INTEGER},
      summary = #{record.summary,jdbcType=VARCHAR},
      form_no = #{record.formNo,jdbcType=VARCHAR},
      flow_id = #{record.flowId,jdbcType=INTEGER},
      current_step_id = #{record.currentStepId,jdbcType=INTEGER},
      next_step_id = #{record.nextStepId,jdbcType=INTEGER},
      prev_step_id = #{record.prevStepId,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=INTEGER},
      role_id = #{record.roleId,jdbcType=INTEGER},
      is_over = #{record.isOver,jdbcType=TINYINT},
      create_user_id = #{record.createUserId,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.deepsoft.haolifa.model.domain.FlowInstance">
    update flow_instance
    <set>
      <if test="summary != null">
        summary = #{summary,jdbcType=VARCHAR},
      </if>
      <if test="formNo != null">
        form_no = #{formNo,jdbcType=VARCHAR},
      </if>
      <if test="flowId != null">
        flow_id = #{flowId,jdbcType=INTEGER},
      </if>
      <if test="currentStepId != null">
        current_step_id = #{currentStepId,jdbcType=INTEGER},
      </if>
      <if test="nextStepId != null">
        next_step_id = #{nextStepId,jdbcType=INTEGER},
      </if>
      <if test="prevStepId != null">
        prev_step_id = #{prevStepId,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="roleId != null">
        role_id = #{roleId,jdbcType=INTEGER},
      </if>
      <if test="isOver != null">
        is_over = #{isOver,jdbcType=TINYINT},
      </if>
      <if test="createUserId != null">
        create_user_id = #{createUserId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.deepsoft.haolifa.model.domain.FlowInstance">
    update flow_instance
    set summary = #{summary,jdbcType=VARCHAR},
      form_no = #{formNo,jdbcType=VARCHAR},
      flow_id = #{flowId,jdbcType=INTEGER},
      current_step_id = #{currentStepId,jdbcType=INTEGER},
      next_step_id = #{nextStepId,jdbcType=INTEGER},
      prev_step_id = #{prevStepId,jdbcType=INTEGER},
      user_id = #{userId,jdbcType=INTEGER},
      role_id = #{roleId,jdbcType=INTEGER},
      is_over = #{isOver,jdbcType=TINYINT},
      create_user_id = #{createUserId,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>