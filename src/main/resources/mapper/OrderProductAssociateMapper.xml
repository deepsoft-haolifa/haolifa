<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.deepsoft.haolifa.dao.repository.OrderProductAssociateMapper">
  <resultMap id="BaseResultMap" type="com.deepsoft.haolifa.model.domain.OrderProductAssociate">
    <constructor>
      <idArg column="id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="create_time" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="order_no" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="product_no" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="product_name" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="specifications" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="product_model" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="lable" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="product_color" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="product_number" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="price" javaType="java.math.BigDecimal" jdbcType="DECIMAL" />
      <arg column="total_price" javaType="java.math.BigDecimal" jdbcType="DECIMAL" />
      <arg column="material_description" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="product_remark" javaType="java.lang.String" jdbcType="VARCHAR" />
    </constructor>
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, create_time, order_no, product_no, product_name, specifications, product_model, 
    lable, product_color, product_number, price, total_price, material_description, product_remark
  </sql>
  <select id="selectByExample" parameterType="com.deepsoft.haolifa.model.domain.OrderProductAssociateExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from order_product_associate
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from order_product_associate
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from order_product_associate
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.deepsoft.haolifa.model.domain.OrderProductAssociateExample">
    delete from order_product_associate
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.deepsoft.haolifa.model.domain.OrderProductAssociate">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into order_product_associate (create_time, order_no, product_no, 
      product_name, specifications, product_model, 
      lable, product_color, product_number, 
      price, total_price, material_description, 
      product_remark)
    values (#{createTime,jdbcType=TIMESTAMP}, #{orderNo,jdbcType=VARCHAR}, #{productNo,jdbcType=VARCHAR}, 
      #{productName,jdbcType=VARCHAR}, #{specifications,jdbcType=VARCHAR}, #{productModel,jdbcType=VARCHAR}, 
      #{lable,jdbcType=VARCHAR}, #{productColor,jdbcType=VARCHAR}, #{productNumber,jdbcType=INTEGER}, 
      #{price,jdbcType=DECIMAL}, #{totalPrice,jdbcType=DECIMAL}, #{materialDescription,jdbcType=VARCHAR}, 
      #{productRemark,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.deepsoft.haolifa.model.domain.OrderProductAssociate">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into order_product_associate
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="createTime != null">
        create_time,
      </if>
      <if test="orderNo != null">
        order_no,
      </if>
      <if test="productNo != null">
        product_no,
      </if>
      <if test="productName != null">
        product_name,
      </if>
      <if test="specifications != null">
        specifications,
      </if>
      <if test="productModel != null">
        product_model,
      </if>
      <if test="lable != null">
        lable,
      </if>
      <if test="productColor != null">
        product_color,
      </if>
      <if test="productNumber != null">
        product_number,
      </if>
      <if test="price != null">
        price,
      </if>
      <if test="totalPrice != null">
        total_price,
      </if>
      <if test="materialDescription != null">
        material_description,
      </if>
      <if test="productRemark != null">
        product_remark,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="orderNo != null">
        #{orderNo,jdbcType=VARCHAR},
      </if>
      <if test="productNo != null">
        #{productNo,jdbcType=VARCHAR},
      </if>
      <if test="productName != null">
        #{productName,jdbcType=VARCHAR},
      </if>
      <if test="specifications != null">
        #{specifications,jdbcType=VARCHAR},
      </if>
      <if test="productModel != null">
        #{productModel,jdbcType=VARCHAR},
      </if>
      <if test="lable != null">
        #{lable,jdbcType=VARCHAR},
      </if>
      <if test="productColor != null">
        #{productColor,jdbcType=VARCHAR},
      </if>
      <if test="productNumber != null">
        #{productNumber,jdbcType=INTEGER},
      </if>
      <if test="price != null">
        #{price,jdbcType=DECIMAL},
      </if>
      <if test="totalPrice != null">
        #{totalPrice,jdbcType=DECIMAL},
      </if>
      <if test="materialDescription != null">
        #{materialDescription,jdbcType=VARCHAR},
      </if>
      <if test="productRemark != null">
        #{productRemark,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.deepsoft.haolifa.model.domain.OrderProductAssociateExample" resultType="java.lang.Long">
    select count(*) from order_product_associate
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update order_product_associate
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.orderNo != null">
        order_no = #{record.orderNo,jdbcType=VARCHAR},
      </if>
      <if test="record.productNo != null">
        product_no = #{record.productNo,jdbcType=VARCHAR},
      </if>
      <if test="record.productName != null">
        product_name = #{record.productName,jdbcType=VARCHAR},
      </if>
      <if test="record.specifications != null">
        specifications = #{record.specifications,jdbcType=VARCHAR},
      </if>
      <if test="record.productModel != null">
        product_model = #{record.productModel,jdbcType=VARCHAR},
      </if>
      <if test="record.lable != null">
        lable = #{record.lable,jdbcType=VARCHAR},
      </if>
      <if test="record.productColor != null">
        product_color = #{record.productColor,jdbcType=VARCHAR},
      </if>
      <if test="record.productNumber != null">
        product_number = #{record.productNumber,jdbcType=INTEGER},
      </if>
      <if test="record.price != null">
        price = #{record.price,jdbcType=DECIMAL},
      </if>
      <if test="record.totalPrice != null">
        total_price = #{record.totalPrice,jdbcType=DECIMAL},
      </if>
      <if test="record.materialDescription != null">
        material_description = #{record.materialDescription,jdbcType=VARCHAR},
      </if>
      <if test="record.productRemark != null">
        product_remark = #{record.productRemark,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update order_product_associate
    set id = #{record.id,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      order_no = #{record.orderNo,jdbcType=VARCHAR},
      product_no = #{record.productNo,jdbcType=VARCHAR},
      product_name = #{record.productName,jdbcType=VARCHAR},
      specifications = #{record.specifications,jdbcType=VARCHAR},
      product_model = #{record.productModel,jdbcType=VARCHAR},
      lable = #{record.lable,jdbcType=VARCHAR},
      product_color = #{record.productColor,jdbcType=VARCHAR},
      product_number = #{record.productNumber,jdbcType=INTEGER},
      price = #{record.price,jdbcType=DECIMAL},
      total_price = #{record.totalPrice,jdbcType=DECIMAL},
      material_description = #{record.materialDescription,jdbcType=VARCHAR},
      product_remark = #{record.productRemark,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.deepsoft.haolifa.model.domain.OrderProductAssociate">
    update order_product_associate
    <set>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="orderNo != null">
        order_no = #{orderNo,jdbcType=VARCHAR},
      </if>
      <if test="productNo != null">
        product_no = #{productNo,jdbcType=VARCHAR},
      </if>
      <if test="productName != null">
        product_name = #{productName,jdbcType=VARCHAR},
      </if>
      <if test="specifications != null">
        specifications = #{specifications,jdbcType=VARCHAR},
      </if>
      <if test="productModel != null">
        product_model = #{productModel,jdbcType=VARCHAR},
      </if>
      <if test="lable != null">
        lable = #{lable,jdbcType=VARCHAR},
      </if>
      <if test="productColor != null">
        product_color = #{productColor,jdbcType=VARCHAR},
      </if>
      <if test="productNumber != null">
        product_number = #{productNumber,jdbcType=INTEGER},
      </if>
      <if test="price != null">
        price = #{price,jdbcType=DECIMAL},
      </if>
      <if test="totalPrice != null">
        total_price = #{totalPrice,jdbcType=DECIMAL},
      </if>
      <if test="materialDescription != null">
        material_description = #{materialDescription,jdbcType=VARCHAR},
      </if>
      <if test="productRemark != null">
        product_remark = #{productRemark,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.deepsoft.haolifa.model.domain.OrderProductAssociate">
    update order_product_associate
    set create_time = #{createTime,jdbcType=TIMESTAMP},
      order_no = #{orderNo,jdbcType=VARCHAR},
      product_no = #{productNo,jdbcType=VARCHAR},
      product_name = #{productName,jdbcType=VARCHAR},
      specifications = #{specifications,jdbcType=VARCHAR},
      product_model = #{productModel,jdbcType=VARCHAR},
      lable = #{lable,jdbcType=VARCHAR},
      product_color = #{productColor,jdbcType=VARCHAR},
      product_number = #{productNumber,jdbcType=INTEGER},
      price = #{price,jdbcType=DECIMAL},
      total_price = #{totalPrice,jdbcType=DECIMAL},
      material_description = #{materialDescription,jdbcType=VARCHAR},
      product_remark = #{productRemark,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>